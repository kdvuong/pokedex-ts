[{"D:\\Workspace\\pokedex-ts\\src\\index.tsx":"1","D:\\Workspace\\pokedex-ts\\src\\serviceWorker.ts":"2","D:\\Workspace\\pokedex-ts\\src\\App.tsx":"3","D:\\Workspace\\pokedex-ts\\src\\router\\config.tsx":"4","D:\\Workspace\\pokedex-ts\\src\\router\\paths.tsx":"5","D:\\Workspace\\pokedex-ts\\src\\hooks\\DrawerHook.ts":"6","D:\\Workspace\\pokedex-ts\\src\\hooks\\SyncPokemonDataHook.ts":"7","D:\\Workspace\\pokedex-ts\\src\\services\\AuthService.ts":"8","D:\\Workspace\\pokedex-ts\\src\\contexts\\Drawer.context.tsx":"9","D:\\Workspace\\pokedex-ts\\src\\components\\views\\index.tsx":"10","D:\\Workspace\\pokedex-ts\\src\\components\\navs\\ResponsiveDrawer.tsx":"11","D:\\Workspace\\pokedex-ts\\src\\hooks\\LocalFirstDbApiHook.ts":"12","D:\\Workspace\\pokedex-ts\\src\\router\\Router.tsx":"13","D:\\Workspace\\pokedex-ts\\src\\router\\links.tsx":"14","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\PokemonDetailViewWrapper.tsx":"15","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\PokemonListViewWrapper.tsx":"16","D:\\Workspace\\pokedex-ts\\src\\components\\move\\list\\MoveListViewWrapper.tsx":"17","D:\\Workspace\\pokedex-ts\\src\\components\\ability\\list\\AbilityListViewWrapper.tsx":"18","D:\\Workspace\\pokedex-ts\\src\\components\\move\\detail\\MoveDetailView.tsx":"19","D:\\Workspace\\pokedex-ts\\src\\components\\type\\list\\TypeListViewWrapper.tsx":"20","D:\\Workspace\\pokedex-ts\\src\\components\\ability\\detail\\AbilityDetailView.tsx":"21","D:\\Workspace\\pokedex-ts\\src\\components\\nature\\detail\\NatureDetailView.tsx":"22","D:\\Workspace\\pokedex-ts\\src\\components\\type\\detail\\TypeDetailView.tsx":"23","D:\\Workspace\\pokedex-ts\\src\\components\\nature\\list\\NatureListViewWrapper.tsx":"24","D:\\Workspace\\pokedex-ts\\src\\services\\EvolutionService.ts":"25","D:\\Workspace\\pokedex-ts\\src\\services\\PokemonDbService.ts":"26","D:\\Workspace\\pokedex-ts\\src\\services\\AbilityService.ts":"27","D:\\Workspace\\pokedex-ts\\src\\services\\PokemonService.ts":"28","D:\\Workspace\\pokedex-ts\\src\\router\\RouteWithSubRoutes.tsx":"29","D:\\Workspace\\pokedex-ts\\src\\components\\move\\list\\MoveListView.tsx":"30","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\PokemonDetailView.tsx":"31","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\PokemonListView.tsx":"32","D:\\Workspace\\pokedex-ts\\src\\components\\type\\list\\TypeListView.tsx":"33","D:\\Workspace\\pokedex-ts\\src\\components\\ability\\list\\AbilityListView.tsx":"34","D:\\Workspace\\pokedex-ts\\src\\components\\nature\\list\\NatureListView.tsx":"35","D:\\Workspace\\pokedex-ts\\src\\constants\\cloudant.config.ts":"36","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\ProfileBanner.tsx":"37","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\PokemonDetailTabs.tsx":"38","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonGrid.tsx":"39","D:\\Workspace\\pokedex-ts\\src\\hooks\\FilterHook.ts":"40","D:\\Workspace\\pokedex-ts\\src\\hooks\\PokemonApiHook.ts":"41","D:\\Workspace\\pokedex-ts\\src\\utils\\GenerationFilter.ts":"42","D:\\Workspace\\pokedex-ts\\src\\utils\\TypeFilter.ts":"43","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\FilterBar.tsx":"44","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonGridItem.tsx":"45","D:\\Workspace\\pokedex-ts\\src\\enums\\index.tsx":"46","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoTab.tsx":"47","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\PokemonCanvas.tsx":"48","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\NavigationArrow.tsx":"49","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\Grid.tsx":"50","D:\\Workspace\\pokedex-ts\\src\\utils\\SpriteDrawer.ts":"51","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\ResponsiveSelect.tsx":"52","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonImage.tsx":"53","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonInfo.tsx":"54","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TypeIcon.tsx":"55","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoBox.tsx":"56","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\StatsSection.tsx":"57","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\AbilitySection.tsx":"58","D:\\Workspace\\pokedex-ts\\src\\data\\pokemonSummaries.ts":"59","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\DescriptionSection.tsx":"60","D:\\Workspace\\pokedex-ts\\src\\components\\common\\styled\\index.d.tsx":"61","D:\\Workspace\\pokedex-ts\\src\\hooks\\CanvasHook.ts":"62","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TemporaryDrawer.tsx":"63","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoItem.tsx":"64","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\StatsTable.tsx":"65","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\Section.tsx":"66","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\AbilityInfo.tsx":"67","D:\\Workspace\\pokedex-ts\\src\\data\\pokemonColors.ts":"68","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TabNav.tsx":"69","D:\\Workspace\\pokedex-ts\\src\\utils\\statCalculator.ts":"70","D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\index.ts":"71","D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\types\\index.ts":"72","D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\nav\\index.ts":"73","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\ProfileBannerFull.tsx":"74","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MoveTab.tsx":"75","D:\\Workspace\\pokedex-ts\\src\\utils\\LearnTypeFilter.ts":"76","D:\\Workspace\\pokedex-ts\\src\\services\\MoveService.ts":"77","D:\\Workspace\\pokedex-ts\\src\\services\\MovesetService.ts":"78","D:\\Workspace\\pokedex-ts\\src\\utils\\useDeepCallback.tsx":"79","D:\\Workspace\\pokedex-ts\\src\\utils\\useDeepCompareRef.tsx":"80","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\LevelUpMoveTable.tsx":"81","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\Table.tsx":"82","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MachineMoveTable.tsx":"83","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MoveTable.tsx":"84","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TabView.tsx":"85","D:\\Workspace\\pokedex-ts\\src\\utils\\DamageClassFilter.ts":"86","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\SearchBar.tsx":"87","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MatchupTab.tsx":"88","D:\\Workspace\\pokedex-ts\\src\\worker\\index.ts":"89","D:\\Workspace\\pokedex-ts\\src\\worker\\worker.ts":"90","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TypePill.tsx":"91","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TypeMultiplierPill.tsx":"92","D:\\Workspace\\pokedex-ts\\src\\services\\TypeService.ts":"93"},{"size":762,"mtime":1610056110593,"results":"94","hashOfConfig":"95"},{"size":5295,"mtime":1589152358789,"results":"96","hashOfConfig":"95"},{"size":1458,"mtime":1608950238303,"results":"97","hashOfConfig":"95"},{"size":2331,"mtime":1607030909038,"results":"98","hashOfConfig":"95"},{"size":611,"mtime":1605047119855,"results":"99","hashOfConfig":"95"},{"size":646,"mtime":1607045242907,"results":"100","hashOfConfig":"95"},{"size":2746,"mtime":1609967574640,"results":"101","hashOfConfig":"95"},{"size":1392,"mtime":1604946590523,"results":"102","hashOfConfig":"95"},{"size":1457,"mtime":1609528696889,"results":"103","hashOfConfig":"95"},{"size":1004,"mtime":1609528497705,"results":"104","hashOfConfig":"95"},{"size":5275,"mtime":1609873956868,"results":"105","hashOfConfig":"95"},{"size":1855,"mtime":1608764742110,"results":"106","hashOfConfig":"95"},{"size":480,"mtime":1599157043427,"results":"107","hashOfConfig":"95"},{"size":699,"mtime":1607045231306,"results":"108","hashOfConfig":"95"},{"size":550,"mtime":1607129698469,"results":"109","hashOfConfig":"95"},{"size":272,"mtime":1607045237686,"results":"110","hashOfConfig":"95"},{"size":269,"mtime":1607045239607,"results":"111","hashOfConfig":"95"},{"size":278,"mtime":1607045238821,"results":"112","hashOfConfig":"95"},{"size":127,"mtime":1606881017306,"results":"113","hashOfConfig":"95"},{"size":269,"mtime":1607045240190,"results":"114","hashOfConfig":"95"},{"size":136,"mtime":1606880994074,"results":"115","hashOfConfig":"95"},{"size":133,"mtime":1606881059917,"results":"116","hashOfConfig":"95"},{"size":127,"mtime":1606880913983,"results":"117","hashOfConfig":"95"},{"size":275,"mtime":1609528370924,"results":"118","hashOfConfig":"95"},{"size":883,"mtime":1606623487787,"results":"119","hashOfConfig":"95"},{"size":3829,"mtime":1610053109485,"results":"120","hashOfConfig":"95"},{"size":282,"mtime":1607490891836,"results":"121","hashOfConfig":"95"},{"size":273,"mtime":1607491056873,"results":"122","hashOfConfig":"95"},{"size":955,"mtime":1604949190366,"results":"123","hashOfConfig":"95"},{"size":3467,"mtime":1609877420525,"results":"124","hashOfConfig":"95"},{"size":1105,"mtime":1607486777319,"results":"125","hashOfConfig":"95"},{"size":2686,"mtime":1609896804955,"results":"126","hashOfConfig":"95"},{"size":126,"mtime":1607032071189,"results":"127","hashOfConfig":"95"},{"size":197,"mtime":1607032026439,"results":"128","hashOfConfig":"95"},{"size":130,"mtime":1607032041639,"results":"129","hashOfConfig":"95"},{"size":131,"mtime":1609789770593,"results":"130","hashOfConfig":"95"},{"size":2001,"mtime":1607486870633,"results":"131","hashOfConfig":"95"},{"size":4171,"mtime":1609872933047,"results":"132","hashOfConfig":"95"},{"size":1250,"mtime":1607020137196,"results":"133","hashOfConfig":"95"},{"size":645,"mtime":1606972718628,"results":"134","hashOfConfig":"95"},{"size":2686,"mtime":1609967635020,"results":"135","hashOfConfig":"95"},{"size":2470,"mtime":1607045319043,"results":"136","hashOfConfig":"95"},{"size":7017,"mtime":1607407118686,"results":"137","hashOfConfig":"95"},{"size":960,"mtime":1609868637980,"results":"138","hashOfConfig":"95"},{"size":2236,"mtime":1609877156669,"results":"139","hashOfConfig":"95"},{"size":1156,"mtime":1609784175298,"results":"140","hashOfConfig":"95"},{"size":1630,"mtime":1609872377277,"results":"141","hashOfConfig":"95"},{"size":614,"mtime":1607468500593,"results":"142","hashOfConfig":"95"},{"size":1325,"mtime":1609869491606,"results":"143","hashOfConfig":"95"},{"size":1338,"mtime":1609869350838,"results":"144","hashOfConfig":"95"},{"size":1939,"mtime":1607365126861,"results":"145","hashOfConfig":"95"},{"size":3910,"mtime":1606974881294,"results":"146","hashOfConfig":"95"},{"size":1749,"mtime":1606968022034,"results":"147","hashOfConfig":"95"},{"size":1586,"mtime":1607125551982,"results":"148","hashOfConfig":"95"},{"size":1436,"mtime":1607406791202,"results":"149","hashOfConfig":"95"},{"size":1532,"mtime":1609872261461,"results":"150","hashOfConfig":"95"},{"size":762,"mtime":1609780283637,"results":"151","hashOfConfig":"95"},{"size":1404,"mtime":1609872345011,"results":"152","hashOfConfig":"95"},{"size":160,"mtime":1606954999562,"results":"153","hashOfConfig":"95"},{"size":510,"mtime":1607210500778,"results":"154","hashOfConfig":"95"},{"size":227,"mtime":1609877951077,"results":"155","hashOfConfig":"95"},{"size":346,"mtime":1607140577561,"results":"156","hashOfConfig":"95"},{"size":1119,"mtime":1605642786035,"results":"157","hashOfConfig":"95"},{"size":1203,"mtime":1607209691987,"results":"158","hashOfConfig":"95"},{"size":3426,"mtime":1609725651538,"results":"159","hashOfConfig":"95"},{"size":918,"mtime":1607210445903,"results":"160","hashOfConfig":"95"},{"size":985,"mtime":1607209956032,"results":"161","hashOfConfig":"95"},{"size":151,"mtime":1606955018017,"results":"162","hashOfConfig":"95"},{"size":986,"mtime":1608869060851,"results":"163","hashOfConfig":"95"},{"size":2189,"mtime":1609725245916,"results":"164","hashOfConfig":"95"},{"size":100,"mtime":1607407167797,"results":"165","hashOfConfig":"95"},{"size":1092,"mtime":1607407070903,"results":"166","hashOfConfig":"95"},{"size":148,"mtime":1609790915489,"results":"167","hashOfConfig":"95"},{"size":2711,"mtime":1609972114370,"results":"168","hashOfConfig":"95"},{"size":2558,"mtime":1609897509090,"results":"169","hashOfConfig":"95"},{"size":849,"mtime":1609781554636,"results":"170","hashOfConfig":"95"},{"size":262,"mtime":1607490934484,"results":"171","hashOfConfig":"95"},{"size":273,"mtime":1608763523870,"results":"172","hashOfConfig":"95"},{"size":1501,"mtime":1608764690740,"results":"173","hashOfConfig":"95"},{"size":1260,"mtime":1608764682303,"results":"174","hashOfConfig":"95"},{"size":545,"mtime":1609991581970,"results":"175","hashOfConfig":"95"},{"size":2839,"mtime":1609991342706,"results":"176","hashOfConfig":"95"},{"size":514,"mtime":1609991577379,"results":"177","hashOfConfig":"95"},{"size":683,"mtime":1609991567772,"results":"178","hashOfConfig":"95"},{"size":786,"mtime":1609780618759,"results":"179","hashOfConfig":"95"},{"size":1280,"mtime":1609784576178,"results":"180","hashOfConfig":"95"},{"size":1912,"mtime":1609897039053,"results":"181","hashOfConfig":"95"},{"size":3402,"mtime":1609970858307,"results":"182","hashOfConfig":"95"},{"size":146,"mtime":1609876287135,"results":"183","hashOfConfig":"95"},{"size":774,"mtime":1609897279114,"results":"184","hashOfConfig":"95"},{"size":1145,"mtime":1609897959349,"results":"185","hashOfConfig":"95"},{"size":1719,"mtime":1609972302600,"results":"186","hashOfConfig":"95"},{"size":271,"mtime":1609958593811,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"qpha1c",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"190"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"190"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"190"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"190"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"190"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"190"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"190"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"190"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"190"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"190"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"190"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"D:\\Workspace\\pokedex-ts\\src\\index.tsx",[],["388","389"],"D:\\Workspace\\pokedex-ts\\src\\serviceWorker.ts",[],"D:\\Workspace\\pokedex-ts\\src\\App.tsx",["390","391","392","393","394"],"import React, { useEffect, useState, FunctionComponent, Fragment } from \"react\";\nimport useSyncPokemonData from \"hooks/SyncPokemonDataHook\";\nimport { GoogleLogin } from \"react-google-login\";\nimport authService from \"services/AuthService\";\nimport { IRoute } from \"router/config\";\nimport ResponsiveDrawer from \"components/navs/ResponsiveDrawer\";\nimport { drawerContext } from \"contexts/Drawer.context\";\nimport { useDrawer } from \"hooks/DrawerHook\";\n\ninterface IProps {\n  routes: IRoute[];\n}\n\nconst App: FunctionComponent<IProps> = (props: IProps) => {\n  const { routes } = props;\n  const drawer = useDrawer();\n  const { sync } = useSyncPokemonData();\n  const [authenticated, setAuthenticated] = useState<boolean>(false);\n\n  useEffect(() => {\n    sync();\n    // authService.renewToken().then((isSuccess) => {\n    //   setAuthenticated(isSuccess);\n    // });\n  }, [sync]);\n\n  const handleSigninSuccess = async (res: any) => {\n    const isSuccess = await authService.signin(res.accessToken);\n    setAuthenticated(isSuccess);\n  };\n\n  return (\n    <drawerContext.Provider value={drawer}>\n      <ResponsiveDrawer routes={routes} />\n    </drawerContext.Provider>\n  );\n};\n\nexport default App;\n\n{\n  /* <div className=\"App\">\n{authenticated ? (\n  <div>Logged in</div>\n) : (\n  <GoogleLogin\n    clientId=\"232104767030-07klpmed2b3e588cte839dhqpeieub07.apps.googleusercontent.com\"\n    cookiePolicy=\"single_host_origin\"\n    onSuccess={handleSigninSuccess}\n  />\n)}\n</div> */\n}\n","D:\\Workspace\\pokedex-ts\\src\\router\\config.tsx",["395"],"import React, { ReactNode, LazyExoticComponent, ComponentType } from \"react\";\r\nimport views from \"../components/views\";\r\nimport paths from \"./paths\";\r\n\r\nexport interface IRoute {\r\n  // Path, like in basic prop\r\n  path: string;\r\n  // Exact, like in basic prop\r\n  exact: boolean;\r\n  // Preloader for lazy loading\r\n  fallback: NonNullable<ReactNode> | null;\r\n  // Lazy Loaded component\r\n  component?: ComponentType<any>;\r\n  // Sub routes\r\n  routes?: IRoute[];\r\n  // Redirect path\r\n  redirect?: string;\r\n  // If router is private, this is going to be true\r\n  private?: boolean;\r\n}\r\n\r\nexport const routes: IRoute[] = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    redirect: paths.POKEMON_LIST,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.POKEMON_LIST,\r\n    component: views.PokemonListView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.POKEMON_DETAIL,\r\n    component: views.PokemonDetailView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.MOVE_LIST,\r\n    component: views.MoveListView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.MOVE_DETAIL,\r\n    component: views.MoveDetailView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.ABILITY_LIST,\r\n    component: views.AbilityListView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.ABILITY_DETAIL,\r\n    component: views.AbilityDetailView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.TYPE_LIST,\r\n    component: views.TypeListView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.TYPE_DETAIL,\r\n    component: views.TypeDetailView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.NATURE_LIST,\r\n    component: views.NatureListView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n  {\r\n    path: paths.NATURE_DETAIL,\r\n    component: views.NatureDetailView,\r\n    exact: true,\r\n    private: false,\r\n    fallback: <div> Loading... </div>,\r\n  },\r\n];\r\n","D:\\Workspace\\pokedex-ts\\src\\router\\paths.tsx",["396"],"// pokemons\r\nconst POKEMON_LIST = \"/pokemons\";\r\nconst POKEMON_DETAIL = \"/pokemons/:id\";\r\n\r\n// moves\r\nconst MOVE_LIST = \"/moves\";\r\nconst MOVE_DETAIL = \"/moves/:id\";\r\n\r\n// abilities\r\nconst ABILITY_LIST = \"/abilities\";\r\nconst ABILITY_DETAIL = \"/abilities/:id\";\r\n\r\n// types\r\nconst TYPE_LIST = \"/types\";\r\nconst TYPE_DETAIL = \"/types/:id\";\r\n\r\n// natures\r\nconst NATURE_LIST = \"/natures\";\r\nconst NATURE_DETAIL = \"/natures/:id\";\r\n\r\nexport default {\r\n  POKEMON_LIST,\r\n  POKEMON_DETAIL,\r\n  MOVE_LIST,\r\n  MOVE_DETAIL,\r\n  ABILITY_LIST,\r\n  ABILITY_DETAIL,\r\n  TYPE_LIST,\r\n  TYPE_DETAIL,\r\n  NATURE_LIST,\r\n  NATURE_DETAIL,\r\n};\r\n","D:\\Workspace\\pokedex-ts\\src\\hooks\\DrawerHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\hooks\\SyncPokemonDataHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\services\\AuthService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\contexts\\Drawer.context.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\views\\index.tsx",["397"],"import { lazy } from \"react\";\r\nimport PokemonListView from \"../pokemon/list/PokemonListViewWrapper\";\r\nimport MoveListView from \"../move/list/MoveListViewWrapper\";\r\nimport AbilityListView from \"../ability/list/AbilityListViewWrapper\";\r\nimport TypeListView from \"../type/list/TypeListViewWrapper\";\r\nimport NatureListView from \"../nature/list/NatureListViewWrapper\";\r\nimport PokemonDetailView from \"../pokemon/detail/PokemonDetailViewWrapper\";\r\n\r\n// detail views\r\nconst MoveDetailView = lazy(() => import(\"../move/detail/MoveDetailView\"));\r\nconst AbilityDetailView = lazy(() => import(\"../ability/detail/AbilityDetailView\"));\r\nconst TypeDetailView = lazy(() => import(\"../type/detail/TypeDetailView\"));\r\nconst NatureDetailView = lazy(() => import(\"../nature/detail/NatureDetailView\"));\r\n\r\nexport default {\r\n  PokemonListView,\r\n  MoveListView,\r\n  AbilityListView,\r\n  TypeListView,\r\n  NatureListView,\r\n  PokemonDetailView,\r\n  MoveDetailView,\r\n  AbilityDetailView,\r\n  TypeDetailView,\r\n  NatureDetailView,\r\n};\r\n","D:\\Workspace\\pokedex-ts\\src\\components\\navs\\ResponsiveDrawer.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\hooks\\LocalFirstDbApiHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\router\\Router.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\router\\links.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\PokemonDetailViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\PokemonListViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\move\\list\\MoveListViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\ability\\list\\AbilityListViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\move\\detail\\MoveDetailView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\type\\list\\TypeListViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\ability\\detail\\AbilityDetailView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\nature\\detail\\NatureDetailView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\type\\detail\\TypeDetailView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\nature\\list\\NatureListViewWrapper.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\services\\EvolutionService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\services\\PokemonDbService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\services\\AbilityService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\services\\PokemonService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\router\\RouteWithSubRoutes.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\move\\list\\MoveListView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\PokemonDetailView.tsx",["398"],"import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProfileBanner from \"./components/ProfileBanner\";\r\nimport PokemonDetailTabs from \"./components/PokemonDetailTabs\";\r\n\r\nconst ViewContainer = styled.div`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst PokemonDetailView: FunctionComponent<IProps> = (props) => {\r\n  const [id, setId] = useState<number>(props.id);\r\n\r\n  const handleBackward = useCallback(() => {\r\n    const newId = id === 1 ? 807 : id - 1;\r\n    // history.push(`/pokemons/${newId}`);\r\n    setId(newId);\r\n  }, [id]);\r\n\r\n  const handleForward = useCallback(() => {\r\n    const newId = id === 807 ? 1 : id + 1;\r\n    // history.push(`/pokemons/${newId}`);\r\n    setId(newId);\r\n  }, [id]);\r\n\r\n  return (\r\n    <ViewContainer>\r\n      <ProfileBanner id={id} onBackwardClick={handleBackward} onForwardClick={handleForward} />\r\n      <PokemonDetailTabs id={id} />\r\n    </ViewContainer>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailView;\r\n","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\PokemonListView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\type\\list\\TypeListView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\ability\\list\\AbilityListView.tsx",["399"],"import { withDrawerContext } from \"contexts/Drawer.context\";\r\nimport React from \"react\";\r\n\r\nconst AbilityListView = () => {\r\n  return <div>Abilitydex</div>;\r\n};\r\n\r\nexport default AbilityListView;\r\n","D:\\Workspace\\pokedex-ts\\src\\components\\nature\\list\\NatureListView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\constants\\cloudant.config.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\ProfileBanner.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\PokemonDetailTabs.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonGrid.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\hooks\\FilterHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\hooks\\PokemonApiHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\GenerationFilter.ts",["400","401"],"import { $enum } from \"ts-enum-util\";\r\nimport { Generation } from \"enums\";\r\nimport { Color, FilterHasShortendName } from \"types\";\r\n\r\nfunction getGenerationName(generation: Generation): string {\r\n  return $enum.mapValue(generation).with({\r\n    [Generation.GEN_1]: \"Generation I\",\r\n    [Generation.GEN_2]: \"Generation II\",\r\n    [Generation.GEN_3]: \"Generation III\",\r\n    [Generation.GEN_4]: \"Generation IV\",\r\n    [Generation.GEN_5]: \"Generation V\",\r\n    [Generation.GEN_6]: \"Generation VI\",\r\n    [Generation.GEN_7]: \"Generation VII\",\r\n    [Generation.GEN_8]: \"Generation VIII\",\r\n  });\r\n}\r\n\r\nfunction getGenerationShortenedName(generation: Generation): string {\r\n  return $enum.mapValue(generation).with({\r\n    [Generation.GEN_1]: \"Gen I\",\r\n    [Generation.GEN_2]: \"Gen II\",\r\n    [Generation.GEN_3]: \"Gen III\",\r\n    [Generation.GEN_4]: \"Gen IV\",\r\n    [Generation.GEN_5]: \"Gen V\",\r\n    [Generation.GEN_6]: \"Gen VI\",\r\n    [Generation.GEN_7]: \"Gen VII\",\r\n    [Generation.GEN_8]: \"Gen VIII\",\r\n  });\r\n}\r\n\r\nfunction getGenerationColor(): Color {\r\n  return {\r\n    text: \"#6e7a8a\",\r\n    background: \"#ccd4db\",\r\n  };\r\n}\r\n\r\nconst generationNameMap: Map<string, Generation> = new Map<string, Generation>();\r\n(function populateGenerationNameMap() {\r\n  $enum(Generation).forEach((generation) => {\r\n    const name = getGenerationName(generation);\r\n    const shortenedName = getGenerationShortenedName(generation);\r\n    generationNameMap.set(name, generation);\r\n    generationNameMap.set(shortenedName, generation);\r\n  });\r\n})();\r\n\r\nexport const GenerationFilter: FilterHasShortendName<Generation> = class GenerationFilter {\r\n  private static DEFAULT_VALUE = \"All Generations\";\r\n  private static SHORTENED_DEFAULT_VALUE = \"All Gens\";\r\n\r\n  public static getName(): string {\r\n    return \"Generation\";\r\n  }\r\n\r\n  public static getValueName(generation: Generation | null): string {\r\n    if (generation === null) {\r\n      return this.DEFAULT_VALUE;\r\n    }\r\n    return getGenerationName(generation);\r\n  }\r\n\r\n  public static getShortenedValueName(generation: Generation | null): string {\r\n    if (generation === null) {\r\n      return this.SHORTENED_DEFAULT_VALUE;\r\n    }\r\n    return getGenerationShortenedName(generation);\r\n  }\r\n\r\n  public static getValues(): string[] {\r\n    return [this.DEFAULT_VALUE, ...$enum(Generation).getValues().map(getGenerationName)];\r\n  }\r\n\r\n  public static getTypeFromValue(value: string): Generation | undefined {\r\n    return generationNameMap.get(value);\r\n  }\r\n};\r\n","D:\\Workspace\\pokedex-ts\\src\\utils\\TypeFilter.ts",["402"],"import { $enum } from \"ts-enum-util\";\r\nimport { Type } from \"enums\";\r\nimport { Color, Filter } from \"types\";\r\nimport { TypeIcons as icons } from \"assets/icons\";\r\n\r\nexport function getTypeName(type: Type): string {\r\n  return $enum.mapValue(type).with({\r\n    [Type.NORMAL]: \"Normal\",\r\n    [Type.FIRE]: \"Fire\",\r\n    [Type.FIGHTING]: \"Fight\",\r\n    [Type.WATER]: \"Water\",\r\n    [Type.FLYING]: \"Flying\",\r\n    [Type.GRASS]: \"Grass\",\r\n    [Type.POISON]: \"Poison\",\r\n    [Type.ELECTRIC]: \"Electric\",\r\n    [Type.GROUND]: \"Ground\",\r\n    [Type.PSYCHIC]: \"Psychic\",\r\n    [Type.ROCK]: \"Rock\",\r\n    [Type.ICE]: \"Ice\",\r\n    [Type.BUG]: \"Bug\",\r\n    [Type.DRAGON]: \"Dragon\",\r\n    [Type.GHOST]: \"Ghost\",\r\n    [Type.DARK]: \"Dark\",\r\n    [Type.STEEL]: \"Steel\",\r\n    [Type.FAIRY]: \"Fairy\",\r\n  });\r\n}\r\n\r\nfunction getTypeColor(type: Type): Color {\r\n  const DEFAULT_TEXT_COLOR = \"#f5f5f5\";\r\n  return $enum.mapValue(type).with({\r\n    // [Type.DEFAULT]: {\r\n    //   text: \"#6e7a8a\",\r\n    //   background: \"#ccd4db\",\r\n    // },\r\n    [Type.NORMAL]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#aa9\",\r\n    },\r\n    [Type.FIRE]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#f42\",\r\n    },\r\n    [Type.FIGHTING]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#b54\",\r\n    },\r\n    [Type.WATER]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#39f\",\r\n    },\r\n    [Type.FLYING]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#89f\",\r\n    },\r\n    [Type.GRASS]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#7c5\",\r\n    },\r\n    [Type.POISON]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#a59\",\r\n    },\r\n    [Type.ELECTRIC]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#fc3\",\r\n    },\r\n    [Type.GROUND]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#db5\",\r\n    },\r\n    [Type.PSYCHIC]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#f59\",\r\n    },\r\n    [Type.ROCK]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#ba6\",\r\n    },\r\n    [Type.ICE]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#6cf\",\r\n    },\r\n    [Type.BUG]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#ab2\",\r\n    },\r\n    [Type.DRAGON]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#76e\",\r\n    },\r\n    [Type.GHOST]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#66b\",\r\n    },\r\n    [Type.DARK]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#754\",\r\n    },\r\n    [Type.STEEL]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#aab\",\r\n    },\r\n    [Type.FAIRY]: {\r\n      text: DEFAULT_TEXT_COLOR,\r\n      background: \"#e9e\",\r\n    },\r\n  });\r\n}\r\n\r\nexport function getTypeIcon(type: Type): string {\r\n  return $enum.mapValue(type).with({\r\n    [Type.NORMAL]: icons.NormalIcon,\r\n    [Type.FIRE]: icons.FireIcon,\r\n    [Type.FIGHTING]: icons.FightingIcon,\r\n    [Type.WATER]: icons.WaterIcon,\r\n    [Type.FLYING]: icons.FlyingIcon,\r\n    [Type.GRASS]: icons.GrassIcon,\r\n    [Type.POISON]: icons.PoisonIcon,\r\n    [Type.ELECTRIC]: icons.ElectricIcon,\r\n    [Type.GROUND]: icons.GroundIcon,\r\n    [Type.PSYCHIC]: icons.PsychicIcon,\r\n    [Type.ROCK]: icons.RockIcon,\r\n    [Type.ICE]: icons.IceIcon,\r\n    [Type.BUG]: icons.BugIcon,\r\n    [Type.DRAGON]: icons.DragonIcon,\r\n    [Type.GHOST]: icons.GhostIcon,\r\n    [Type.DARK]: icons.DarkIcon,\r\n    [Type.STEEL]: icons.SteelIcon,\r\n    [Type.FAIRY]: icons.FairyIcon,\r\n  });\r\n}\r\n\r\nexport function getTypeIconColor(type: Type): string {\r\n  return $enum.mapValue(type).with({\r\n    [Type.NORMAL]: \"linear-gradient(180deg, #9298a4, #a3a49e)\",\r\n    [Type.FIRE]: \"linear-gradient(180deg, #fb9b51, #fbae46)\",\r\n    [Type.FIGHTING]: \"linear-gradient(180deg, #ce4265, #e74347)\",\r\n    [Type.WATER]: \"linear-gradient(180deg, #4a90dd, #6cbde4)\",\r\n    [Type.FLYING]: \"linear-gradient(180deg, #90a7da, #a6c2f2)\",\r\n    [Type.GRASS]: \"linear-gradient(180deg, #5fbc51, #5ac178)\",\r\n    [Type.POISON]: \"linear-gradient(180deg, #a864c7, #c261d4)\",\r\n    [Type.ELECTRIC]: \"linear-gradient(180deg, #edd53e, #fbe273)\",\r\n    [Type.GROUND]: \"linear-gradient(180deg, #dc7545, #d29463)\",\r\n    [Type.PSYCHIC]: \"linear-gradient(180deg, #f66f71, #fe9f92)\",\r\n    [Type.ROCK]: \"linear-gradient(180deg, #c5b489, #d7cd90)\",\r\n    [Type.ICE]: \"linear-gradient(180deg, #70ccbd, #8cddd4)\",\r\n    [Type.BUG]: \"linear-gradient(180deg, #92bc2c, #afc836)\",\r\n    [Type.DRAGON]: \"linear-gradient(180deg, #0c69c8, #0180c7)\",\r\n    [Type.GHOST]: \"linear-gradient(180deg, #516aac, #7773d4)\",\r\n    [Type.DARK]: \"linear-gradient(180deg, #595761, #6e7587)\",\r\n    [Type.STEEL]: \"linear-gradient(180deg, #52869d, #58a6aa)\",\r\n    [Type.FAIRY]: \"linear-gradient(180deg, #ec8ce5, #f3a7e7)\",\r\n  });\r\n}\r\n\r\nexport function getTypePillColor(type: Type): string {\r\n  return $enum.mapValue(type).with({\r\n    [Type.NORMAL]: \"#9A9DA1\",\r\n    [Type.FIRE]: \"#F8A54F\",\r\n    [Type.FIGHTING]: \"#D94256\",\r\n    [Type.WATER]: \"#559EDF\",\r\n    [Type.FLYING]: \"#9BB4E8\",\r\n    [Type.GRASS]: \"#5DBE62\",\r\n    [Type.POISON]: \"#B563CE\",\r\n    [Type.ELECTRIC]: \"#EDD53F\",\r\n    [Type.GROUND]: \"#D78555\",\r\n    [Type.PSYCHIC]: \"#F87C7A\",\r\n    [Type.ROCK]: \"#CEC18C\",\r\n    [Type.ICE]: \"#7ED4C9\",\r\n    [Type.BUG]: \"#9DC130\",\r\n    [Type.DRAGON]: \"#0773C7\",\r\n    [Type.GHOST]: \"#6970C5\",\r\n    [Type.DARK]: \"#5F606D\",\r\n    [Type.STEEL]: \"#5596A4\",\r\n    [Type.FAIRY]: \"#EF97E6\",\r\n  });\r\n}\r\n\r\nexport function getTypeIconBoxShadow(type: Type): string {\r\n  return $enum.mapValue(type).with({\r\n    [Type.NORMAL]: \"rgba(93, 89, 106, 0.7)\",\r\n    [Type.FIRE]: \"rgba(254, 158, 84, 0.7)\",\r\n    [Type.FIGHTING]: \"rgba(212, 68, 93, 0.7)\",\r\n    [Type.WATER]: \"rgba(85, 159, 223, 0.7)\",\r\n    [Type.FLYING]: \"rgba(157, 181, 228, 0.7)\",\r\n    [Type.GRASS]: \"rgba(100, 185, 84, 0.7)\",\r\n    [Type.POISON]: \"rgba(163, 107, 203, 0.7)\",\r\n    [Type.ELECTRIC]: \"rgba(244, 213, 86, 0.7)\",\r\n    [Type.GROUND]: \"rgba(216, 130, 85, 0.7)\",\r\n    [Type.PSYCHIC]: \"rgba(248, 124, 122, 0.7)\",\r\n    [Type.ROCK]: \"rgba(203, 193, 148, 0.7)\",\r\n    [Type.ICE]: \"rgba(126, 212, 201, 0.7)\",\r\n    [Type.BUG]: \"rgba(152, 195, 47, 0.7)\",\r\n    [Type.DRAGON]: \"rgba(7, 109, 192  , 0.7)\",\r\n    [Type.GHOST]: \"rgba(101, 108, 198, 0.7)\",\r\n    [Type.DARK]: \"rgba(93, 89, 106, 0.7)\",\r\n    [Type.STEEL]: \"rgba(80, 148, 161, 0.7)\",\r\n    [Type.FAIRY]: \"rgba(242, 148, 233, 0.7)\",\r\n  });\r\n}\r\n\r\nconst typeNameMap: Map<string, Type> = new Map<string, Type>();\r\n(function populateTypeNameMap() {\r\n  $enum(Type).forEach((type) => {\r\n    typeNameMap.set(getTypeName(type), type);\r\n  });\r\n})();\r\n\r\nexport const TypeFilter: Filter<Type> = class {\r\n  private static DEFAULT_VALUE: string = \"All Types\";\r\n\r\n  public static getName(): string {\r\n    return \"Type\";\r\n  }\r\n\r\n  public static getValueName(type: Type | null): string {\r\n    if (type === null) {\r\n      return this.DEFAULT_VALUE;\r\n    }\r\n    return getTypeName(type);\r\n  }\r\n\r\n  public static getValues(): string[] {\r\n    return [this.DEFAULT_VALUE, ...$enum(Type).getValues().map(getTypeName)];\r\n  }\r\n\r\n  public static getTypeFromValue(value: string): Type | undefined {\r\n    return typeNameMap.get(value);\r\n  }\r\n};\r\n","D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\FilterBar.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonGridItem.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\enums\\index.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoTab.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\PokemonCanvas.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\NavigationArrow.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\Grid.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\SpriteDrawer.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\ResponsiveSelect.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonImage.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\list\\components\\PokemonInfo.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TypeIcon.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoBox.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\StatsSection.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\AbilitySection.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\data\\pokemonSummaries.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\DescriptionSection.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\styled\\index.d.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\hooks\\CanvasHook.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TemporaryDrawer.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\InfoItem.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\StatsTable.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\Section.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\AbilityInfo.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\data\\pokemonColors.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TabNav.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\statCalculator.ts",["403"],"import { Stat, StatName, Stats } from \"types\";\r\n\r\ninterface StatVariables {\r\n  level: number;\r\n  iv: number;\r\n  ev: number;\r\n  natureMultiplier: number;\r\n}\r\n\r\nexport const calculateStat = (name: StatName, value: number, variables: StatVariables) => {\r\n  const { level, iv, ev, natureMultiplier } = variables;\r\n  if (name === \"hp\") {\r\n    return Math.floor((level / 100) * (value * 2 + iv + ev / 4) + level + 10);\r\n  } else {\r\n    return Math.floor(((level / 100) * (value * 2 + iv + ev / 4) + 5) * natureMultiplier);\r\n  }\r\n};\r\n\r\nexport const getMinStat = (name: StatName, value: number) => {\r\n  const variables: StatVariables = {\r\n    level: 100,\r\n    iv: 0,\r\n    ev: 0,\r\n    natureMultiplier: 0.9,\r\n  };\r\n  return calculateStat(name, value, variables);\r\n};\r\n\r\nexport const getMaxStat = (name: StatName, value: number) => {\r\n  const variables: StatVariables = {\r\n    level: 100,\r\n    iv: 31,\r\n    ev: 252,\r\n    natureMultiplier: 1.1,\r\n  };\r\n  return calculateStat(name, value, variables);\r\n};\r\n\r\nexport const toMinStats = (stats: Stats): Stats => {\r\n  const { hp, attack, defense, special_attack, special_defense, speed } = stats;\r\n  return {\r\n    hp: { ...hp, value: getMinStat(\"hp\", hp.value) },\r\n    attack: { ...hp, value: getMinStat(\"attack\", attack.value) },\r\n    defense: { ...hp, value: getMinStat(\"defense\", defense.value) },\r\n    special_attack: { ...hp, value: getMinStat(\"special_attack\", special_attack.value) },\r\n    special_defense: { ...hp, value: getMinStat(\"special_defense\", special_defense.value) },\r\n    speed: { ...hp, value: getMinStat(\"speed\", speed.value) },\r\n  };\r\n};\r\n\r\nexport const toMaxStats = (stats: Stats) => {\r\n  const { hp, attack, defense, special_attack, special_defense, speed } = stats;\r\n  return {\r\n    hp: { ...hp, value: getMaxStat(\"hp\", hp.value) },\r\n    attack: { ...hp, value: getMaxStat(\"attack\", attack.value) },\r\n    defense: { ...hp, value: getMaxStat(\"defense\", defense.value) },\r\n    special_attack: { ...hp, value: getMaxStat(\"special_attack\", special_attack.value) },\r\n    special_defense: { ...hp, value: getMaxStat(\"special_defense\", special_defense.value) },\r\n    speed: { ...hp, value: getMaxStat(\"speed\", speed.value) },\r\n  };\r\n};\r\n","D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\index.ts",[],"D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\types\\index.ts",[],"D:\\Workspace\\pokedex-ts\\src\\assets\\icons\\nav\\index.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\ProfileBannerFull.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MoveTab.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\LearnTypeFilter.ts",[],"D:\\Workspace\\pokedex-ts\\src\\services\\MoveService.ts",["404"],"import DbService, { Document } from \"./PokemonDbService\";\r\nimport { DbName, Type } from \"enums\";\r\nimport { Move } from \"types\";\r\n\r\ninterface MoveDocument extends Document, Move {}\r\n\r\nexport const moveService = new DbService<MoveDocument>(DbName.POKEMON_MOVES);\r\n","D:\\Workspace\\pokedex-ts\\src\\services\\MovesetService.ts",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\useDeepCallback.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\useDeepCompareRef.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\LevelUpMoveTable.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\Table.tsx",["405"],"import React, { useEffect, useCallback, useState, FunctionComponent, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport orderBy from \"lodash-es/orderBy\";\r\nimport { ColumnModel, DataObject, SortModel } from \"types\";\r\nimport { SortDirection } from \"enums\";\r\n\r\nconst StyledHeaderCell = styled.th`\r\n  position: sticky;\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  thead tr:nth-child(1) th {\r\n    background: #fafafa;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  data: DataObject[];\r\n  columns: ColumnModel[];\r\n  sortModel?: SortModel;\r\n}\r\n\r\nconst Table: FunctionComponent<IProps> = (props) => {\r\n  const { data, columns, sortModel } = props;\r\n  const [sortedData, setSortedData] = useState<DataObject[]>(data);\r\n  const [sortCategory, setSortCategory] = useState<string>(\r\n    sortModel?.field ?? columns[0].fieldName\r\n  );\r\n  const [sortDirection, setSortDirection] = useState<SortDirection>(\r\n    sortModel?.sortDirection ?? SortDirection.ASC\r\n  );\r\n\r\n  useEffect(() => {\r\n    // we use switch block because we don't want to be strongly coupled with the field names of move.\r\n    let newSortedData = data;\r\n    const targetColumn = columns.find((c) => c.fieldName === sortCategory);\r\n\r\n    if (data.length > 0 && targetColumn) {\r\n      newSortedData = orderBy(\r\n        data,\r\n        [targetColumn.sortFunction ?? targetColumn.fieldName],\r\n        [sortDirection]\r\n      );\r\n    }\r\n\r\n    setSortedData(newSortedData);\r\n  }, [columns, data, sortCategory, sortDirection]);\r\n\r\n  const toggleSort = useCallback(\r\n    (newSortCategory) => {\r\n      let newSortDirection = SortDirection.ASC;\r\n      if (newSortCategory === sortCategory) {\r\n        newSortDirection =\r\n          sortDirection === SortDirection.ASC ? SortDirection.DESC : SortDirection.ASC;\r\n      }\r\n      setSortCategory(newSortCategory);\r\n      setSortDirection(newSortDirection);\r\n    },\r\n    [sortCategory, sortDirection, setSortCategory, setSortDirection]\r\n  );\r\n\r\n  const Header = useMemo(() => {\r\n    return columns.map((column) => (\r\n      <StyledHeaderCell key={column.name} onClick={() => toggleSort(column.fieldName)}>\r\n        {column.name}\r\n      </StyledHeaderCell>\r\n    ));\r\n  }, [columns, toggleSort]);\r\n\r\n  const Row = useMemo(() => {}, []);\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>{Header}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {sortedData.length > 0 &&\r\n          sortedData.map((datum, index) => (\r\n            <tr key={datum.toString() + index}>\r\n              {columns.map((column) => {\r\n                return <td key={column.fieldName}>{datum[column.fieldName]}</td>;\r\n              })}\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MachineMoveTable.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MoveTable.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TabView.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\utils\\DamageClassFilter.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\SearchBar.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\MatchupTab.tsx",["406","407","408","409","410","411","412"],"import { PokemonType } from \"types\";\r\nimport React, { Fragment, FunctionComponent, useMemo, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TypePill from \"components/common/components/TypePill\";\r\nimport Section from \"./Section\";\r\nimport TypeMultiplierPill from \"./TypeMultiplierPill\";\r\nimport { Type } from \"enums\";\r\nimport { $enum } from \"ts-enum-util\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\n\r\ninterface IProps {\r\n  types: PokemonType[];\r\n}\r\n\r\nconst Card = styled.div`\r\n  padding: 16px;\r\n  /* box-shadow: 0px 0px 10px #e1e7ec; */\r\n  border-radius: 5px;\r\n  border: 1px solid #e1e7ec;\r\n  background: white;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  font-size: 16px;\r\n  font-family: \"Nunito Sans\";\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nconst TypeDefenseContainers = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst MatchupTab: FunctionComponent<IProps> = ({ types }) => {\r\n  const {getTypesByIds} = usePokemonApi();\r\n  const mapRef = useRef<Map<Type, number>>(new Map());\r\n\r\n  useEffect(() => {\r\n    getTypesByIds(types.map(t => t.id)).then(typeData => {\r\n      const map = mapRef.current;\r\n      $enum(Type)\r\n            .getValues()\r\n            .forEach(type => {\r\n              typeData.forEach(data => {\r\n                let multiplier = map.get(type) ?? 1;\r\n                const {half_damage_from, double_damage_from, no_damage_from} = data.damage_relations;\r\n                if (half_damage_from.includes(type)) {\r\n                  multiplier /= 2;\r\n                } else if (double_damage_from.includes(type)) {\r\n                  multiplier *= 2;\r\n                } else if (no_damage_from.includes(type)) {\r\n                  multiplier = 0;\r\n                }\r\n                map.set(type, multiplier);\r\n              })\r\n            });\r\n    })\r\n    \r\n  }, [])\r\n  return (\r\n    <div className=\"container\">\r\n      <TypeDefenseContainers>\r\n        {$enum(Type)\r\n          .getValues()\r\n          .map((type) => {\r\n            return <TypeMultiplierPill type={type} multiplier={map.} />;\r\n          })}\r\n      </TypeDefenseContainers>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchupTab;\r\n","D:\\Workspace\\pokedex-ts\\src\\worker\\index.ts",[],"D:\\Workspace\\pokedex-ts\\src\\worker\\worker.ts",[],"D:\\Workspace\\pokedex-ts\\src\\components\\common\\components\\TypePill.tsx",[],["413","414"],"D:\\Workspace\\pokedex-ts\\src\\components\\pokemon\\detail\\components\\TypeMultiplierPill.tsx",[],"D:\\Workspace\\pokedex-ts\\src\\services\\TypeService.ts",[],{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":1,"column":57,"nodeType":"421","messageId":"422","endLine":1,"endColumn":65},{"ruleId":"419","severity":1,"message":"423","line":3,"column":10,"nodeType":"421","messageId":"422","endLine":3,"endColumn":21},{"ruleId":"419","severity":1,"message":"424","line":18,"column":10,"nodeType":"421","messageId":"422","endLine":18,"endColumn":23},{"ruleId":"419","severity":1,"message":"425","line":27,"column":9,"nodeType":"421","messageId":"422","endLine":27,"endColumn":28},{"ruleId":"426","severity":1,"message":"427","line":41,"column":1,"nodeType":"428","messageId":"429","endLine":53,"endColumn":2},{"ruleId":"419","severity":1,"message":"430","line":1,"column":28,"nodeType":"421","messageId":"422","endLine":1,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":21,"column":1,"nodeType":"433","endLine":32,"endColumn":3},{"ruleId":"431","severity":1,"message":"432","line":15,"column":1,"nodeType":"433","endLine":26,"endColumn":3},{"ruleId":"419","severity":1,"message":"434","line":1,"column":49,"nodeType":"421","messageId":"422","endLine":1,"endColumn":58},{"ruleId":"419","severity":1,"message":"435","line":1,"column":10,"nodeType":"421","messageId":"422","endLine":1,"endColumn":27},{"ruleId":"419","severity":1,"message":"436","line":31,"column":10,"nodeType":"421","messageId":"422","endLine":31,"endColumn":28},{"ruleId":"419","severity":1,"message":"437","line":48,"column":74,"nodeType":"421","messageId":"422","endLine":48,"endColumn":90},{"ruleId":"419","severity":1,"message":"438","line":29,"column":10,"nodeType":"421","messageId":"422","endLine":29,"endColumn":22},{"ruleId":"419","severity":1,"message":"439","line":1,"column":10,"nodeType":"421","messageId":"422","endLine":1,"endColumn":14},{"ruleId":"419","severity":1,"message":"440","line":2,"column":18,"nodeType":"421","messageId":"422","endLine":2,"endColumn":22},{"ruleId":"419","severity":1,"message":"441","line":74,"column":9,"nodeType":"421","messageId":"422","endLine":74,"endColumn":12},{"ruleId":"419","severity":1,"message":"420","line":2,"column":17,"nodeType":"421","messageId":"422","endLine":2,"endColumn":25},{"ruleId":"419","severity":1,"message":"442","line":4,"column":8,"nodeType":"421","messageId":"422","endLine":4,"endColumn":16},{"ruleId":"419","severity":1,"message":"443","line":5,"column":8,"nodeType":"421","messageId":"422","endLine":5,"endColumn":15},{"ruleId":"419","severity":1,"message":"444","line":14,"column":7,"nodeType":"421","messageId":"422","endLine":14,"endColumn":11},{"ruleId":"419","severity":1,"message":"445","line":22,"column":7,"nodeType":"421","messageId":"422","endLine":22,"endColumn":13},{"ruleId":"419","severity":1,"message":"446","line":35,"column":9,"nodeType":"421","messageId":"422","endLine":35,"endColumn":12},{"ruleId":"419","severity":1,"message":"446","line":36,"column":11,"nodeType":"421","messageId":"422","endLine":36,"endColumn":33},{"ruleId":"415","replacedBy":"447"},{"ruleId":"417","replacedBy":"448"},"no-native-reassign",["449"],"no-negated-in-lhs",["450"],"@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'GoogleLogin' is defined but never used.","'authenticated' is assigned a value but never used.","'handleSigninSuccess' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LazyExoticComponent' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'withDrawerContext' is defined but never used.","'getGenerationColor' is defined but never used.","'GenerationFilter' is defined but never used.","'getTypeColor' is defined but never used.","'Stat' is defined but never used.","'Type' is defined but never used.","'Row' is assigned a value but never used.","'TypePill' is defined but never used.","'Section' is defined but never used.","'Card' is assigned a value but never used.","'Header' is assigned a value but never used.","'map' is assigned a value but never used.",["449"],["450"],"no-global-assign","no-unsafe-negation"]