{"version":3,"sources":["components/common/styled/index.d.tsx","hooks/FilterHook.ts","utils/GenerationFilter.ts","components/common/components/TypeIcon.tsx","components/common/components/SearchBar.tsx","components/common/components/TemporaryDrawer.tsx","components/common/components/ResponsiveSelect.tsx","components/common/components/FilterBar.tsx","worker/worker.ts","webpack:///./src/worker/worker.ts?ba98","components/common/components/Grid.tsx","components/pokemon/list/components/PokemonInfo.tsx","data/pokemonColors.ts","components/pokemon/list/components/PokemonImage.tsx","components/pokemon/list/components/PokemonGridItem.tsx","components/pokemon/list/components/PokemonGrid.tsx","components/pokemon/list/PokemonListView.tsx","worker/index.ts"],"names":["StyledToolbar","styled","Toolbar","useFilter","FilterClass","useState","filter","setFilter","onChange","useCallback","newValue","newFilter","getTypeFromValue","getGenerationName","generation","$enum","mapValue","with","Generation","GEN_1","GEN_2","GEN_3","GEN_4","GEN_5","GEN_6","GEN_7","GEN_8","getGenerationShortenedName","generationNameMap","Map","forEach","name","shortenedName","set","GenerationFilter","this","DEFAULT_VALUE","SHORTENED_DEFAULT_VALUE","getValues","map","value","get","Background","div","props","expanded","size","getTypeIconColor","type","getTypeIconBoxShadow","Image","img","TypeName","span","TypeIcon","src","getTypeIcon","alt","StyledDiv","FilterIcon","SearchInputContainer","SearchInput","input","FilterCount","SearchBar","count","placeholder","NavIcons","Search","style","width","height","useStyles","makeStyles","list","fullList","TemporaryDrawer","side","open","children","onClose","classes","Drawer","anchor","className","role","StyledButton","ButtonBase","ButtonContent","Arrow","active","PopoverContainer","DrawerContainer","ResponsiveSelect","currentItem","showItems","setShowItems","anchorEl","useRef","isSmallScreen","useMediaQuery","query","handleClick","event","handleClose","handleItemChange","newItem","currentTarget","textContent","getCurrentItemName","getValueName","getShortenedValueName","openPopover","openDrawer","onClick","ref","Popover","id","undefined","current","anchorOrigin","vertical","horizontal","transformOrigin","item","getName","toLowerCase","IconContainer","FilterBar","filters","Pokeball","key","inst","wrap","Worker","module","exports","f","GridContainer","Grid","items","itemsPerRow","GridItem","parentWidth","columnCount","columnWidth","rowCount","Math","ceil","length","rowHeight","itemData","overflowX","overflowY","InfoContainer","Id","p","Name","h5","Icons","PokemonInfo","types","toString","padStart","colors","circleIn","keyframes","AnimateImage","ImageBackground","backgroundColor","ImageContainer","Sprite","PokemonImage","formattedId","Color","background","lighten","desaturate","gradientAnimation","StyledLink","Link","PokemonGridItem","data","columnIndex","rowIndex","pokemon","left","to","pathname","PokemonGrid","pokemons","setItemsPerRow","isXSmallScreen","isMediumScreen","isLargeScreen","useEffect","worker","PokemonListView","getAllPokemonSummaries","usePokemonApi","searchValue","setSearchValue","TypeFilter","currentTypeFilter","onTypeChange","currentGenFilter","onGenerationChange","setPokemons","filteredPokemons","setFilteredPokemons","isCurrent","then","filtered","generationFilterProps","useMemo","typeFilterProps"],"mappings":"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","file":"static/js/7.d12ae70a.chunk.js","sourcesContent":["import { Toolbar } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledToolbar = styled(Toolbar)`\r\n  padding: 0px 16px;\r\n  height: 56px;\r\n  border-bottom: 1px solid rgb(225, 231, 236);\r\n`;\r\n","import { useCallback, useState } from \"react\";\r\nimport { Filter } from \"types\";\r\n\r\ninterface IFilter<T> {\r\n  filter: T | null;\r\n  onChange: (newValue: string) => void;\r\n}\r\n\r\nconst useFilter = <T>(FilterClass: Filter<T>): IFilter<T> => {\r\n  const [filter, setFilter] = useState<T | null>(null);\r\n\r\n  const onChange = useCallback(\r\n    (newValue: string) => {\r\n      const newFilter: T | undefined = FilterClass.getTypeFromValue(newValue);\r\n      if (newFilter) {\r\n        setFilter(newFilter);\r\n      } else {\r\n        setFilter(null);\r\n      }\r\n    },\r\n    [FilterClass]\r\n  );\r\n\r\n  return { filter, onChange };\r\n};\r\n\r\nexport default useFilter;\r\n","import { $enum } from \"ts-enum-util\";\r\nimport { Generation } from \"enums\";\r\nimport { Color, FilterHasShortendName } from \"types\";\r\n\r\nfunction getGenerationName(generation: Generation): string {\r\n  return $enum.mapValue(generation).with({\r\n    [Generation.GEN_1]: \"Generation I\",\r\n    [Generation.GEN_2]: \"Generation II\",\r\n    [Generation.GEN_3]: \"Generation III\",\r\n    [Generation.GEN_4]: \"Generation IV\",\r\n    [Generation.GEN_5]: \"Generation V\",\r\n    [Generation.GEN_6]: \"Generation VI\",\r\n    [Generation.GEN_7]: \"Generation VII\",\r\n    [Generation.GEN_8]: \"Generation VIII\",\r\n  });\r\n}\r\n\r\nfunction getGenerationShortenedName(generation: Generation): string {\r\n  return $enum.mapValue(generation).with({\r\n    [Generation.GEN_1]: \"Gen I\",\r\n    [Generation.GEN_2]: \"Gen II\",\r\n    [Generation.GEN_3]: \"Gen III\",\r\n    [Generation.GEN_4]: \"Gen IV\",\r\n    [Generation.GEN_5]: \"Gen V\",\r\n    [Generation.GEN_6]: \"Gen VI\",\r\n    [Generation.GEN_7]: \"Gen VII\",\r\n    [Generation.GEN_8]: \"Gen VIII\",\r\n  });\r\n}\r\n\r\nfunction getGenerationColor(): Color {\r\n  return {\r\n    text: \"#6e7a8a\",\r\n    background: \"#ccd4db\",\r\n  };\r\n}\r\n\r\nconst generationNameMap: Map<string, Generation> = new Map<string, Generation>();\r\n(function populateGenerationNameMap() {\r\n  $enum(Generation).forEach((generation) => {\r\n    const name = getGenerationName(generation);\r\n    const shortenedName = getGenerationShortenedName(generation);\r\n    generationNameMap.set(name, generation);\r\n    generationNameMap.set(shortenedName, generation);\r\n  });\r\n})();\r\n\r\nexport const GenerationFilter: FilterHasShortendName<Generation> = class GenerationFilter {\r\n  private static DEFAULT_VALUE = \"All Generations\";\r\n  private static SHORTENED_DEFAULT_VALUE = \"All Gens\";\r\n\r\n  public static getName(): string {\r\n    return \"Generation\";\r\n  }\r\n\r\n  public static getValueName(generation: Generation | null): string {\r\n    if (generation === null) {\r\n      return this.DEFAULT_VALUE;\r\n    }\r\n    return getGenerationName(generation);\r\n  }\r\n\r\n  public static getShortenedValueName(generation: Generation | null): string {\r\n    if (generation === null) {\r\n      return this.SHORTENED_DEFAULT_VALUE;\r\n    }\r\n    return getGenerationShortenedName(generation);\r\n  }\r\n\r\n  public static getValues(): string[] {\r\n    return [this.DEFAULT_VALUE, ...$enum(Generation).getValues().map(getGenerationName)];\r\n  }\r\n\r\n  public static getTypeFromValue(value: string): Generation | undefined {\r\n    return generationNameMap.get(value);\r\n  }\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Type } from \"enums\";\r\nimport styled from \"styled-components\";\r\nimport { getTypeIconColor, getTypeIconBoxShadow, getTypeIcon } from \"utils/TypeFilter\";\r\n\r\nconst Background = styled.div<{ type: Type; size: number; expanded: boolean }>`\r\n  width: ${(props) => (props.expanded ? \"auto\" : `${props.size}px`)};\r\n  height: ${(props) => `${props.size}px`};\r\n  border-radius: 35px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: ${(props) => getTypeIconColor(props.type)};\r\n  box-shadow: 0 0 10px 0 ${(props) => getTypeIconBoxShadow(props.type)};\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Image = styled.img<{ size: number; expanded: boolean }>`\r\n  width: ${(props) => `${props.size}px`};\r\n  height: ${(props) => `${props.size}px`};\r\n  ${(props) => props.expanded && \"margin: 0 0.75rem\"};\r\n`;\r\n\r\nconst TypeName = styled.span`\r\n  margin-right: 1rem;\r\n  text-transform: uppercase;\r\n  color: white;\r\n`;\r\n\r\ninterface IProps {\r\n  type: Type;\r\n  size: number;\r\n  expanded?: boolean;\r\n}\r\n\r\nconst TypeIcon: FunctionComponent<IProps> = ({ type, size, expanded = false }) => {\r\n  return (\r\n    <Background type={type} size={size * 2} expanded={expanded}>\r\n      <Image src={getTypeIcon(type)} alt={`${type}-icon`} size={size} expanded={expanded} />\r\n      {expanded && <TypeName>{type}</TypeName>}\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default TypeIcon;\r\n","import React, { FunctionComponent, ChangeEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledToolbar } from \"components/common/styled/index.d\";\r\nimport { NavIcons } from \"assets/icons\";\r\n\r\nconst Toolbar = styled(StyledToolbar)`\r\n  padding: 8px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background-color: #e1e7ec;\r\n  border-radius: 5px;\r\n  border: 1px solid transparent;\r\n  transition: all 200ms ease-out;\r\n  &:focus-within {\r\n    border: 1px solid #e1e7ec;\r\n    background: white;\r\n    box-shadow: 0px 0px 10px #e1e7ec;\r\n  }\r\n`;\r\n\r\nconst FilterIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 16px;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst SearchInputContainer = styled.div`\r\n  display: flex;\r\n  flex-grow: 10;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  background-color: transparent;\r\n  width: 100%;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: left;\r\n`;\r\n\r\nconst FilterCount = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.3);\r\n  span {\r\n    text-transform: capitalize;\r\n  }\r\n  margin-right: 8px;\r\n`;\r\n\r\ninterface IProps {\r\n  name: string;\r\n  count: number;\r\n  placeholder?: string;\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SearchBar: FunctionComponent<IProps> = ({\r\n  name,\r\n  count,\r\n  onChange,\r\n  placeholder = \"Enter name\",\r\n}) => {\r\n  return (\r\n    <Toolbar>\r\n      <StyledDiv>\r\n        <FilterIcon>\r\n          <img src={NavIcons.Search} style={{ width: 18, height: 18 }} alt=\"search-icon\" />\r\n        </FilterIcon>\r\n        <SearchInputContainer>\r\n          <SearchInput placeholder={placeholder} onChange={onChange} />\r\n        </SearchInputContainer>\r\n        <FilterCount>\r\n          <span>{`${count} ${name}`}</span>\r\n        </FilterCount>\r\n      </StyledDiv>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\ntype DrawerSide = \"top\" | \"left\" | \"bottom\" | \"right\";\r\n\r\ninterface IProps {\r\n  side: DrawerSide;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst TemporaryDrawer: FunctionComponent<IProps> = ({\r\n  side,\r\n  open,\r\n  children,\r\n  onClose,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const sideList = () => (\r\n    <div className={classes.list} role=\"presentation\">\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  const fullList = () => (\r\n    <div className={classes.fullList} role=\"presentation\">\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  const displayList = () => {\r\n    if (side === \"top\" || side === \"bottom\") {\r\n      return fullList();\r\n    } else {\r\n      return sideList();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor={side} open={open} onClose={onClose}>\r\n      {displayList()}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default TemporaryDrawer;\r\n","import React, { useState, useRef, useCallback, FunctionComponent, MouseEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Drawer from \"./TemporaryDrawer\";\r\nimport { FilterProps, FilterHasShortendName } from \"types\";\r\n\r\nconst StyledButton = styled(ButtonBase)`\r\n  border-radius: 10px;\r\n  color: #203e55;\r\n  font-weight: bold;\r\n  transition: all 50ms ease-in-out;\r\n`;\r\n\r\nconst ButtonContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  span {\r\n    padding-left: 10px;\r\n  }\r\n`;\r\n\r\nconst Arrow = styled(({ active, ...props }) => <ArrowDropDown {...props} />)`\r\n  transform: ${(props) => (props.active ? \"rotate(-180deg)\" : \"rotate(0)\")};\r\n  transition: all 200ms ease-in-out;\r\n`;\r\n\r\nconst PopoverContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px;\r\n`;\r\n\r\nconst DrawerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px;\r\n`;\r\n\r\nfunction instanceOfFilterHasShortendName(object: any): object is FilterHasShortendName<any> {\r\n  return \"getShortenedValueName\" in object;\r\n}\r\n\r\nconst ResponsiveSelect: FunctionComponent<FilterProps> = ({ filter, currentItem, onChange }) => {\r\n  const [showItems, setShowItems] = useState(false);\r\n  const anchorEl = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 659px)\" });\r\n\r\n  const handleClick = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      setShowItems(!showItems);\r\n    },\r\n    [showItems]\r\n  );\r\n\r\n  const handleClose = useCallback(() => {\r\n    setShowItems(false);\r\n  }, []);\r\n\r\n  const handleItemChange = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      const newItem = event.currentTarget.textContent ?? \"\";\r\n      onChange(newItem);\r\n      handleClose();\r\n    },\r\n    [handleClose, onChange]\r\n  );\r\n\r\n  const getCurrentItemName = useCallback(() => {\r\n    let name = filter.getValueName(currentItem);\r\n    if (isSmallScreen && instanceOfFilterHasShortendName(filter)) {\r\n      name = filter.getShortenedValueName(currentItem);\r\n    }\r\n    return name;\r\n  }, [currentItem, filter, isSmallScreen]);\r\n\r\n  const openPopover = showItems && !isSmallScreen;\r\n  const openDrawer = showItems && isSmallScreen;\r\n\r\n  return (\r\n    <div>\r\n      <StyledButton onClick={handleClick} ref={anchorEl}>\r\n        <ButtonContent>\r\n          <span>{getCurrentItemName()}</span>\r\n          <Arrow active={showItems} />\r\n        </ButtonContent>\r\n      </StyledButton>\r\n      <Popover\r\n        id={openPopover ? \"simple-popover\" : undefined}\r\n        open={openPopover}\r\n        anchorEl={anchorEl ? anchorEl.current : null}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <PopoverContainer>\r\n          {filter.getValues().map((item) => {\r\n            return (\r\n              <button onClick={handleItemChange} key={item}>\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </PopoverContainer>\r\n      </Popover>\r\n      <Drawer side=\"bottom\" open={openDrawer} onClose={handleClose}>\r\n        <DrawerContainer>\r\n          <h2>Select a {filter.getName().toLowerCase()}</h2>\r\n          {filter.getValues().map((item) => {\r\n            return (\r\n              <button onClick={handleItemChange} key={item}>\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        </DrawerContainer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponsiveSelect;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledToolbar } from \"components/common/styled/index.d\";\r\nimport { FilterProps } from \"types\";\r\nimport ResponsiveSelect from \"./ResponsiveSelect\";\r\nimport { NavIcons } from \"assets/icons\";\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  height: 20px;\r\n  margin-right: 16px;\r\n`;\r\n\r\ninterface IProps {\r\n  filters: FilterProps[];\r\n}\r\n\r\nconst FilterBar: FunctionComponent<IProps> = ({ filters }) => {\r\n  return (\r\n    <StyledToolbar>\r\n      <IconContainer>\r\n        <img src={NavIcons.Pokeball} style={{ width: 20, height: 20 }} alt=\"pokeball-icon\" />\r\n      </IconContainer>\r\n      <StyledDiv>\r\n        {filters.map((filter) => (\r\n          <ResponsiveSelect {...filter} key={filter.filter.getName()} />\r\n        ))}\r\n      </StyledDiv>\r\n    </StyledToolbar>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!D:/Workspace/pokedex-ts/node_modules/comlink-loader/dist/comlink-worker-loader.js!D:\\\\Workspace\\\\pokedex-ts\\\\node_modules\\\\react-scripts\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--5-oneOf-2!D:\\\\Workspace\\\\pokedex-ts\\\\src\\\\worker\\\\worker.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"4d244e89d89bbcfbd142.worker.js\");\n};","import React, { FunctionComponent } from \"react\";\r\nimport { FixedSizeGrid, GridChildComponentProps } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GridContainer = styled.div`\r\n  flex: 1 1 auto;\r\n`;\r\n\r\ninterface IProps {\r\n  items: any[];\r\n  itemsPerRow: number;\r\n  GridItem: FunctionComponent<GridChildComponentProps>;\r\n}\r\n\r\nconst Grid: FunctionComponent<IProps> = ({ items, itemsPerRow, GridItem }) => {\r\n  const getColumnWidth = (parentWidth: number) => {\r\n    if (itemsPerRow > 1) {\r\n      return parentWidth / itemsPerRow - 16 / itemsPerRow;\r\n    } else {\r\n      return parentWidth / itemsPerRow;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GridContainer>\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <FixedSizeGrid\r\n            className=\"Grid\"\r\n            columnCount={itemsPerRow}\r\n            columnWidth={getColumnWidth(width)}\r\n            height={height}\r\n            rowCount={Math.ceil(items.length / itemsPerRow)}\r\n            rowHeight={136}\r\n            width={width}\r\n            itemData={{ items, itemsPerRow }}\r\n            style={{ overflowX: \"hidden\", overflowY: \"auto\" }}\r\n          >\r\n            {GridItem}\r\n          </FixedSizeGrid>\r\n        )}\r\n      </AutoSizer>\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import { Type } from \"enums\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport TypeIcon from \"../../../common/components/TypeIcon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InfoContainer = styled.div`\r\n  padding: 0;\r\n  transition: all 200ms linear;\r\n  text-align: left;\r\n  flex: 1;\r\n`;\r\n\r\nconst Id = styled.p`\r\n  color: grey;\r\n  margin-top: 0.5rem;\r\n  margin-left: 12px;\r\n  margin-bottom: 0;\r\n\r\n  span {\r\n    background: #ebeaeb;\r\n    padding: 0 8px;\r\n    border-radius: 10px;\r\n    font-family: \"Titillium Web\", sans-serif;\r\n  }\r\n`;\r\n\r\nconst Name = styled.h5`\r\n  text-transform: capitalize;\r\n  font-size: 1rem;\r\n  padding: 0 !important;\r\n  margin-top: 0.5rem;\r\n  margin-left: 12px;\r\n  margin-bottom: 0;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0.75rem 0;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-top: 0.5rem;\r\n  margin-left: 12px;\r\n  transition: all 200ms cubic-bezier(0.515, 0.09, 0.605, 1.65);\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n  name: string;\r\n  types: Type[];\r\n}\r\n\r\nconst PokemonInfo: FunctionComponent<IProps> = ({ id, name, types }) => {\r\n  return (\r\n    <InfoContainer>\r\n      <Id>\r\n        <span>#{id.toString().padStart(3, \"0\")}</span>\r\n      </Id>\r\n      <Name>{name}</Name>\r\n      <Icons>\r\n        {types.map((type) => (\r\n          <IconContainer key={`${id}-${type}`}>\r\n            <TypeIcon type={type} size={14} />\r\n          </IconContainer>\r\n        ))}\r\n      </Icons>\r\n    </InfoContainer>\r\n  );\r\n};\r\n\r\nexport default PokemonInfo;\r\n","import data from \"./pokemonColors.json\";\r\n\r\nlet colors = data as Record<string, { background: string; content: string[] }>;\r\n\r\nexport default colors;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport colors from \"data/pokemonColors\";\r\nimport Color from \"color\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport \"assets/pokeSprites/pokesprite.css\";\r\n\r\nconst circleIn = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst AnimateImage = styled.div`\r\n  animation: 400ms ${circleIn} cubic-bezier(0.45, 0.26, 0, 1.575);\r\n`;\r\n\r\nconst ImageBackground = styled.div<{ backgroundColor: string }>`\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  margin-left: auto;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.backgroundColor};\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  padding: 0;\r\n  height: 90px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Sprite = styled.span`\r\n  image-rendering: pixelated;\r\n  image-rendering: -moz-crisp-edges;\r\n  image-rendering: crisp-edges;\r\n  transform: scale(2);\r\n  transition: all 200ms linear;\r\n  margin-right: 0;\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst PokemonImage: FunctionComponent<IProps> = ({ id }) => {\r\n  const formattedId = id.toString().padStart(4, \"0\");\r\n\r\n  const getBackgroundColor = () => {\r\n    return Color(colors[`pkspr-dex-${formattedId}`].background)\r\n      .lighten(0.1)\r\n      .desaturate(0.1)\r\n      .toString();\r\n  };\r\n\r\n  return (\r\n    <ImageContainer>\r\n      <AnimateImage>\r\n        <ImageBackground backgroundColor={getBackgroundColor()}>\r\n          <Sprite className={`pkspr-dex-${formattedId} pkspr`} />\r\n        </ImageBackground>\r\n      </AnimateImage>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default PokemonImage;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { PokemonSummary } from \"types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GridChildComponentProps } from \"react-window\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport PokemonInfo from \"./PokemonInfo\";\r\nimport PokemonImage from \"./PokemonImage\";\r\n\r\nconst gradientAnimation = keyframes`\r\n  0% {\r\n    border-color: #1e90ff;\r\n  }\r\n  50% {\r\n    border-color: #81daff;\r\n  }\r\n  100% {\r\n    border-color: #1e90ff;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(ButtonBase)`\r\n  border: 4px solid transparent;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  margin-top: 16px;\r\n  justify-content: flex-start;\r\n  border-radius: 7px;\r\n  &:hover {\r\n    animation: ${gradientAnimation} 1s infinite;\r\n    box-shadow: 0px 0px 10px rgba(96, 173, 225, 0.7);\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n`;\r\n\r\ninterface GridItemProps<T> extends GridChildComponentProps {\r\n  data: {\r\n    items: T[];\r\n    itemsPerRow: number;\r\n  };\r\n}\r\n\r\nconst PokemonGridItem: FunctionComponent<GridItemProps<PokemonSummary>> = (props) => {\r\n  const { data, columnIndex, rowIndex, style } = props;\r\n  const { itemsPerRow } = data;\r\n  const pokemon = data.items[rowIndex * itemsPerRow + columnIndex];\r\n  if (!pokemon) return <span></span>;\r\n\r\n  const getLeft = (left: number) => {\r\n    if (itemsPerRow > 1) {\r\n      return left + 16;\r\n    } else {\r\n      return left;\r\n    }\r\n  };\r\n\r\n  const getWidth = (width: number) => {\r\n    if (itemsPerRow > 1) {\r\n      return width - 16;\r\n    } else {\r\n      return width;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledLink\r\n      to={{\r\n        pathname: `/pokemons/${pokemon.id}`,\r\n      }}\r\n      key={pokemon.name}\r\n      style={{\r\n        ...style,\r\n        left: getLeft(style.left as number),\r\n        width: getWidth(style.width as number),\r\n      }}\r\n    >\r\n      <StyledButton>\r\n        <PokemonInfo id={pokemon.id} name={pokemon.name} types={pokemon.types} />\r\n        <PokemonImage id={pokemon.id} />\r\n      </StyledButton>\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default PokemonGridItem;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { PokemonSummary } from \"types\";\r\nimport Grid from \"components/common/components/Grid\";\r\nimport PokemonGridItem from \"./PokemonGridItem\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\ninterface IProps {\r\n  pokemons: PokemonSummary[];\r\n}\r\n\r\nconst PokemonGrid: FunctionComponent<IProps> = ({ pokemons }) => {\r\n  const [itemsPerRow, setItemsPerRow] = useState<number>(5);\r\n  const isXSmallScreen = useMediaQuery({ query: \"(max-width: 450px)\" });\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 850px)\" });\r\n  const isMediumScreen = useMediaQuery({ query: \"(max-width: 1150px)\" });\r\n  const isLargeScreen = useMediaQuery({ query: \"(max-width: 1450px)\" });\r\n  useEffect(() => {\r\n    if (isXSmallScreen) {\r\n      setItemsPerRow(1);\r\n    } else if (isSmallScreen) {\r\n      setItemsPerRow(2);\r\n    } else if (isMediumScreen) {\r\n      setItemsPerRow(3);\r\n    } else if (isLargeScreen) {\r\n      setItemsPerRow(4);\r\n    } else {\r\n      setItemsPerRow(5);\r\n    }\r\n  }, [isLargeScreen, isMediumScreen, isSmallScreen, isXSmallScreen]);\r\n\r\n  return <Grid items={pokemons} itemsPerRow={itemsPerRow} GridItem={PokemonGridItem} />;\r\n};\r\n\r\nexport default PokemonGrid;\r\n","import React, {\r\n  Fragment,\r\n  FunctionComponent,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport useFilter from \"hooks/FilterHook\";\r\nimport FilterBar from \"components/common/components/FilterBar\";\r\nimport { Generation, Type } from \"enums\";\r\nimport { FilterProps, PokemonSummary } from \"types\";\r\nimport { GenerationFilter } from \"utils/GenerationFilter\";\r\nimport { TypeFilter } from \"utils/TypeFilter\";\r\nimport PokemonGrid from \"./components/PokemonGrid\";\r\nimport SearchBar from \"components/common/components/SearchBar\";\r\nimport Worker from \"worker\";\r\n\r\nconst worker = new Worker();\r\n\r\nconst PokemonListView: FunctionComponent = () => {\r\n  const { getAllPokemonSummaries } = usePokemonApi();\r\n  const [searchValue, setSearchValue] = useState<string>(\"\");\r\n  const { filter: currentTypeFilter, onChange: onTypeChange } = useFilter<Type>(TypeFilter);\r\n  const { filter: currentGenFilter, onChange: onGenerationChange } = useFilter<Generation>(\r\n    GenerationFilter\r\n  );\r\n\r\n  const [pokemons, setPokemons] = useState<PokemonSummary[]>([]);\r\n  const [filteredPokemons, setFilteredPokemons] = useState<PokemonSummary[]>([]);\r\n\r\n  useEffect(() => {\r\n    setPokemons(getAllPokemonSummaries());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true;\r\n    worker\r\n      .filter(pokemons, searchValue, currentGenFilter, currentTypeFilter)\r\n      .then((filtered) => isCurrent && setFilteredPokemons(filtered));\r\n    return () => {\r\n      isCurrent = false;\r\n    };\r\n  }, [currentGenFilter, currentTypeFilter, pokemons, searchValue]);\r\n\r\n  const generationFilterProps: FilterProps = useMemo(\r\n    (): FilterProps => ({\r\n      filter: GenerationFilter,\r\n      currentItem: currentGenFilter,\r\n      onChange: onGenerationChange,\r\n    }),\r\n    [currentGenFilter, onGenerationChange]\r\n  );\r\n\r\n  const typeFilterProps: FilterProps = useMemo(\r\n    (): FilterProps => ({\r\n      filter: TypeFilter,\r\n      currentItem: currentTypeFilter,\r\n      onChange: onTypeChange,\r\n    }),\r\n    [currentTypeFilter, onTypeChange]\r\n  );\r\n\r\n  const handleSearchInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchBar\r\n        name=\"pokemons\"\r\n        count={filteredPokemons.length}\r\n        placeholder={\"Search by name\"}\r\n        onChange={handleSearchInputChange}\r\n      />\r\n      <FilterBar filters={[typeFilterProps, generationFilterProps]} />\r\n      <PokemonGrid pokemons={filteredPokemons} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PokemonListView;\r\n","/* ./worker/index.ts */\r\n\r\n// eslint-disable-next-line\r\nimport Worker from \"comlink-loader!./worker\"; // inline loader\r\n\r\nexport default Worker;\r\n"],"sourceRoot":""}