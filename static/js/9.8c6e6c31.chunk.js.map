{"version":3,"sources":["components/common/components/TypeIcon.tsx","components/pokemon/detail/components/NavigationArrow.tsx","hooks/CanvasHook.ts","assets/pokeSprites/pokesprite.png","utils/SpriteDrawer.ts","components/pokemon/detail/components/PokemonCanvas.tsx","components/pokemon/detail/components/ProfileBannerFull.tsx","components/pokemon/detail/components/ProfileBanner.tsx","components/pokemon/detail/components/Section.tsx","components/pokemon/detail/components/DescriptionSection.tsx","components/pokemon/detail/components/AbilityInfo.tsx","components/pokemon/detail/components/AbilitySection.tsx","utils/statCalculator.ts","components/pokemon/detail/components/StatsTable.tsx","components/pokemon/detail/components/TabNav.tsx","components/pokemon/detail/components/TabView.tsx","components/pokemon/detail/components/StatsSection.tsx","components/pokemon/detail/components/InfoItem.tsx","components/pokemon/detail/components/InfoBox.tsx","components/pokemon/detail/components/InfoTab.tsx","utils/LearnTypeFilter.ts","components/pokemon/detail/components/Table.tsx","components/pokemon/detail/components/MoveTable.tsx","components/pokemon/detail/components/LevelUpMoveTable.tsx","components/pokemon/detail/components/MachineMoveTable.tsx","components/pokemon/detail/components/MoveTab.tsx","components/pokemon/detail/components/TypeMultiplierPill.tsx","components/pokemon/detail/components/MatchupTab.tsx","components/pokemon/detail/components/PokemonDetailTabs.tsx","components/pokemon/detail/PokemonDetailView.tsx"],"names":["Background","styled","div","props","expanded","size","getTypeIconColor","type","getTypeIconBoxShadow","Image","img","TypeName","span","TypeIcon","src","getTypeIcon","alt","ArrowContainer","direction","ArrowBackIcon","ArrowBackIosRoundedIcon","ArrowForwardIcon","ArrowForwardIosRoundedIcon","ArrowButton","NavigationArrow","onClick","useCanvas","draw","canvasRef","useRef","useEffect","current","sprite","spritesheet","width","height","image","colCount","rowCount","isLoading","onload","console","log","pokesprite","drawSprite","id","canvas","setTimeout","x","y","context","getContext","Error","clearRect","drawImage","PokemonCanvas","drawPokemonSprite","useCallback","ref","ProfileBannerHeader","ProfileBannerBody","ProfileBannerFooter","IdContainer","ProfileId","TypesContainer","TypeIconContainer","PokemonCanvasContainer","ProfileBannerBodyFull","pokemon","onBackwardClick","onForwardClick","className","name","toString","padStart","types","map","ProfileBannerContainer","ProfileBannerContent","ProfileBanner","getPokemonSummaryById","usePokemonApi","useState","setPokemon","isNaN","handleBackward","handleForward","ProfileBannerFull","Section","title","children","style","margin","display","borderTop","borderBottom","fontSize","padding","alignItems","justifyContent","paddingLeft","color","fontWeight","StyledDescription","p","DescriptionSection","description","AbilityNameLink","Link","AbilityEffectDiv","AbilityInfo","effect","to","AbilitiesContainer","AbilitySection","abilities","getAbilityName","ability","replace","is_hidden","mapAbilities","elems","abilityInfo","short_effect","push","unshift","calculateStat","value","variables","level","iv","ev","natureMultiplier","Math","floor","getMinStat","getMaxStat","Table","table","Row","tr","index","StatName","th","StatValue","td","StatBarContainer","StatBar","ratio","StatsTable","baseStats","stats","setStats","maxBy","Object","values","hp","maxValue","setMaxValue","newStats","attack","defense","special_attack","special_defense","speed","toMinStats","toMaxStats","formatName","scaleLength","entries","stat","TabNavDiv","NavItem","selected","TabNav","tabs","onTabChange","tab","Container","TabView","currentTab","setCurrentTab","newTab","StatsTableWrapper","StatsSection","Description","InfoItem","label","iconName","StyledInfoBox","InfoItemsWrapper","InfoBox","weight","category","growth","gender","catchRate","formatCategory","InfoTab","getAbilitiesByIds","setAbilities","useDeepCompareEffect","abilityIds","then","res","pokemonAbilities","match","find","a","getLearnTypeName","learnType","$enum","mapValue","with","LearnType","EGG","LEVEL_UP","MACHINE","TUTOR","learnTypeNameMap","Map","forEach","set","StyledHeaderCell","StyledTable","data","columns","sortModel","sortedData","setSortedData","field","fieldName","sortCategory","setSortCategory","sortDirection","SortDirection","ASC","setSortDirection","newSortedData","targetColumn","c","length","orderBy","sortFunction","toggleSort","newSortCategory","newSortDirection","DESC","Header","useMemo","column","sortable","undefined","datum","baseMoveColumns","MoveTable","moves","LevelUpMoveTable","MachineMoveTable","TableContainer","TableScroll","MoveTab","movesetId","getMovesetById","getMovesByIds","egg","level_up","machine","tutor","moveset","setMoveset","move","eggMoves","levelUpMoves","machineMoves","tutorMoves","getTable","get","getLearnTypeFromName","getValues","Pill","getTypePillColor","Multiplier","TypeMultiplierPill","multiplier","typeName","useMediaQuery","query","substring","fractionMultiplier","h2","TypePillContainers","MatchupTab","getTypesByIds","mapRef","weakAgainst","resistAgainst","normal","t","typeData","Type","damage_relations","half_damage_from","double_damage_from","no_damage_from","includes","PokemonDetailTabsContainer","StyledAppBar","AppBar","StyledTabs","Tabs","TabIcon","i","StyledTabContent","StyledSwipeableViews","SwipeableViews","TabContentContainer","content","moveset_id","PokemonDetailTabs","theme","useTheme","currentTabIndex","setCurrentTabIndex","getPokemonById","isSubscribed","handleChange","event","newIndex","handleChangeIndex","position","onChange","variant","TabIndicatorProps","Tab","icon","disableRipple","axis","onChangeIndex","enableMouseEvents","ViewContainer","PokemonDetailView","setId"],"mappings":"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","file":"static/js/9.8c6e6c31.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { Type } from \"enums\";\r\nimport styled from \"styled-components\";\r\nimport { getTypeIconColor, getTypeIconBoxShadow, getTypeIcon } from \"utils/TypeFilter\";\r\n\r\nconst Background = styled.div<{ type: Type; size: number; expanded: boolean }>`\r\n  width: ${(props) => (props.expanded ? \"auto\" : `${props.size}px`)};\r\n  height: ${(props) => `${props.size}px`};\r\n  border-radius: 35px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: ${(props) => getTypeIconColor(props.type)};\r\n  box-shadow: 0 0 10px 0 ${(props) => getTypeIconBoxShadow(props.type)};\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Image = styled.img<{ size: number; expanded: boolean }>`\r\n  width: ${(props) => `${props.size}px`};\r\n  height: ${(props) => `${props.size}px`};\r\n  ${(props) => props.expanded && \"margin: 0 0.75rem\"};\r\n`;\r\n\r\nconst TypeName = styled.span`\r\n  margin-right: 1rem;\r\n  text-transform: uppercase;\r\n  color: white;\r\n`;\r\n\r\ninterface IProps {\r\n  type: Type;\r\n  size: number;\r\n  expanded?: boolean;\r\n}\r\n\r\nconst TypeIcon: FunctionComponent<IProps> = ({ type, size, expanded = false }) => {\r\n  return (\r\n    <Background type={type} size={size * 2} expanded={expanded}>\r\n      <Image src={getTypeIcon(type)} alt={`${type}-icon`} size={size} expanded={expanded} />\r\n      {expanded && <TypeName>{type}</TypeName>}\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default TypeIcon;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBackIosRounded\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\n\r\ntype Direction = \"back\" | \"forward\";\r\n\r\nconst ArrowContainer = styled.div<{ direction: Direction }>`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  justify-content: ${(props) => (props.direction === \"back\" ? \"flex-start\" : \"flex-end\")};\r\n`;\r\nconst ArrowBackIcon = styled(ArrowBackIosRoundedIcon)`\r\n  font-size: 3em;\r\n`;\r\n\r\nconst ArrowForwardIcon = styled(ArrowForwardIosRoundedIcon)`\r\n  font-size: 3em;\r\n`;\r\n\r\nconst ArrowButton = styled.div`\r\n  transform: scaleY(1.2);\r\n  color: rgba(0, 255, 255, 0.5);\r\n  transition: 200ms ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  direction: Direction;\r\n  onClick: () => void;\r\n}\r\n\r\nconst NavigationArrow: FunctionComponent<IProps> = ({ direction, onClick }) => {\r\n  const getIcon = () => {\r\n    return direction === \"back\" ? <ArrowBackIcon /> : <ArrowForwardIcon />;\r\n  };\r\n\r\n  return (\r\n    <ArrowContainer direction={direction}>\r\n      <ArrowButton onClick={onClick}>{getIcon()}</ArrowButton>\r\n    </ArrowContainer>\r\n  );\r\n};\r\n\r\nexport default NavigationArrow;\r\n","import { useRef, useEffect, RefObject } from \"react\";\r\n\r\nconst useCanvas = (\r\n  draw: (canvas: HTMLCanvasElement | null) => void\r\n): RefObject<HTMLCanvasElement> => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    draw(canvasRef.current);\r\n  }, [draw]);\r\n\r\n  return canvasRef;\r\n};\r\n\r\nexport default useCanvas;\r\n","export default __webpack_public_path__ + \"static/media/pokesprite.aea03713.png\";","import pokesprite from \"assets/pokeSprites/pokesprite.png\";\r\n\r\nconst sprite = {\r\n  width: 40,\r\n  height: 30,\r\n};\r\n\r\nconst spritesheet = {\r\n  width: 1280,\r\n  height: 780,\r\n  image: new Image(),\r\n  colCount: 1280 / sprite.width,\r\n  rowCount: 780 / sprite.height,\r\n  isLoading: true,\r\n};\r\n\r\nspritesheet.image.onload = () => {\r\n  console.log(\"Spritesheet is loaded\");\r\n  spritesheet.isLoading = false;\r\n};\r\n\r\nspritesheet.image.src = pokesprite;\r\n\r\nexport const drawSprite = (id: number, canvas: HTMLCanvasElement) => {\r\n  if (spritesheet.isLoading) {\r\n    console.log(\"Spritesheet is loading, retrying...\");\r\n    setTimeout(() => drawSprite(id, canvas), 10);\r\n    return;\r\n  }\r\n\r\n  const x = ((id - 1) % spritesheet.colCount) * sprite.width;\r\n  const y = (((id - 1) / spritesheet.colCount) >> 0) * sprite.height;\r\n  const context = canvas.getContext(\"2d\");\r\n\r\n  if (context == null) {\r\n    throw new Error(\"Canvas context is null\");\r\n  }\r\n\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n  context.drawImage(\r\n    spritesheet.image,\r\n    x,\r\n    y,\r\n    sprite.width,\r\n    sprite.height,\r\n    0,\r\n    0,\r\n    canvas.width,\r\n    canvas.height\r\n  );\r\n\r\n  // // translate sprite to bottom of canvas\r\n  // const imgData = context.getImageData(0, 0, sprite.width, sprite.height);\r\n  // let data = imgData.data;\r\n  // let pixel = 0;\r\n  // let offset = 0;\r\n  // let offsetFound = false;\r\n  // for (let i = data.length - 1; i >= 0; i -= 4) {\r\n  //   if (((i - 3) % (sprite.width * 4)) * 4 === 0 && !offsetFound) {\r\n  //     pixel = i - 3;\r\n  //   }\r\n  //   if (data[i] > 0 && !offsetFound) {\r\n  //     offset = data.length - pixel;\r\n  //     offsetFound = true;\r\n  //   }\r\n  //   if (offsetFound) {\r\n  //     data[i - 3 + offset] = data[i - 3];\r\n  //     data[i - 2 + offset] = data[i - 2];\r\n  //     data[i - 1 + offset] = data[i - 1];\r\n  //     data[i + offset] = data[i];\r\n  //   }\r\n  // }\r\n  // context.putImageData(imgData, 0, 0);\r\n};\r\n","import React, { FunctionComponent, useCallback } from \"react\";\r\nimport useCanvas from \"hooks/CanvasHook\";\r\nimport { drawSprite } from \"utils/SpriteDrawer\";\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst PokemonCanvas: FunctionComponent<IProps> = ({ id }) => {\r\n  const drawPokemonSprite = useCallback(\r\n    (canvas: HTMLCanvasElement | null) => {\r\n      if (canvas === null) {\r\n        return;\r\n      }\r\n      drawSprite(id, canvas);\r\n    },\r\n    [id]\r\n  );\r\n\r\n  const canvasRef = useCanvas(drawPokemonSprite);\r\n\r\n  return <canvas ref={canvasRef} width=\"40\" height=\"30\" />;\r\n};\r\n\r\nexport default PokemonCanvas;\r\n","import React, { Fragment, FunctionComponent } from \"react\";\r\nimport NavigationArrow from \"./NavigationArrow\";\r\nimport styled from \"styled-components\";\r\nimport PokemonCanvas from \"./PokemonCanvas\";\r\nimport { PokemonSummary } from \"types\";\r\nimport TypeIcon from \"components/common/components/TypeIcon\";\r\n\r\nconst ProfileBannerHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 3rem;\r\n  color: white;\r\n  text-transform: capitalize;\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst ProfileBannerBody = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 0 !important;\r\n  flex-direction: row;\r\n  flex-grow: 1;\r\n  min-height: 15vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileBannerFooter = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 3rem;\r\n  background-color: rgba(0, 255, 255, 0.5);\r\n`;\r\n\r\nconst IdContainer = styled.div`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst ProfileId = styled.span`\r\n  padding: 3px 12px;\r\n  background: white;\r\n  border-radius: 20px;\r\n  color: #a9a9a9;\r\n`;\r\n\r\nconst TypesContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TypeIconContainer = styled.div`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst PokemonCanvasContainer = styled.div`\r\n  width: 160px;\r\n  height: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 200ms ease-out;\r\n`;\r\n\r\ninterface IProps {\r\n  onBackwardClick: () => void;\r\n  onForwardClick: () => void;\r\n  pokemon: PokemonSummary;\r\n}\r\n\r\nconst ProfileBannerBodyFull: FunctionComponent<IProps> = ({\r\n  pokemon,\r\n  onBackwardClick,\r\n  onForwardClick,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <ProfileBannerHeader className=\"container\">{pokemon?.name}</ProfileBannerHeader>\r\n      <ProfileBannerBody className=\"container\">\r\n        <NavigationArrow direction=\"back\" onClick={onBackwardClick} />\r\n\r\n        <PokemonCanvasContainer>\r\n          <PokemonCanvas id={pokemon.id} />\r\n        </PokemonCanvasContainer>\r\n\r\n        <NavigationArrow direction=\"forward\" onClick={onForwardClick} />\r\n      </ProfileBannerBody>\r\n      <ProfileBannerFooter>\r\n        <div className=\"container align-items-center d-flex\">\r\n          <IdContainer>\r\n            <ProfileId>#{pokemon.id.toString().padStart(3, \"0\")}</ProfileId>\r\n          </IdContainer>\r\n          <TypesContainer>\r\n            {pokemon?.types.map((type) => (\r\n              <TypeIconContainer key={`${type}-icon-container`}>\r\n                <TypeIcon type={type} size={14} key={type} expanded={true} />\r\n              </TypeIconContainer>\r\n            ))}\r\n          </TypesContainer>\r\n        </div>\r\n      </ProfileBannerFooter>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileBannerBodyFull;\r\n","import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport { PokemonSummary } from \"types\";\r\nimport ProfileBannerFull from \"./ProfileBannerFull\";\r\n\r\nconst ProfileBannerContainer = styled.div`\r\n  width: 100%;\r\n  height: 280px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background: radial-gradient(\r\n    circle at 50% 250%,\r\n    rgba(20, 190, 214, 1) 65%,\r\n    rgba(7, 105, 211, 1) 85%\r\n  );\r\n  canvas {\r\n    width: 40px;\r\n    height: 30px;\r\n    transform: scale(4);\r\n    image-rendering: pixelated;\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: crisp-edges;\r\n    transition: all 200ms linear;\r\n    margin-right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n\r\nconst ProfileBannerContent = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n  onBackwardClick: () => void;\r\n  onForwardClick: () => void;\r\n}\r\n\r\nconst ProfileBanner: FunctionComponent<IProps> = ({ id, onBackwardClick, onForwardClick }) => {\r\n  const { getPokemonSummaryById } = usePokemonApi();\r\n  const [pokemon, setPokemon] = useState<PokemonSummary | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(id)) {\r\n      setPokemon(getPokemonSummaryById(id));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const handleBackward = useCallback(() => {\r\n    onBackwardClick();\r\n  }, [onBackwardClick]);\r\n\r\n  const handleForward = useCallback(() => {\r\n    onForwardClick();\r\n  }, [onForwardClick]);\r\n\r\n  return (\r\n    <ProfileBannerContainer>\r\n      <ProfileBannerContent>\r\n        {pokemon && (\r\n          <ProfileBannerFull\r\n            pokemon={pokemon}\r\n            onBackwardClick={handleBackward}\r\n            onForwardClick={handleForward}\r\n          />\r\n        )}\r\n      </ProfileBannerContent>\r\n    </ProfileBannerContainer>\r\n  );\r\n};\r\n\r\nexport default ProfileBanner;\r\n","import React, { FunctionComponent, ReactNode } from \"react\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Section: FunctionComponent<IProps> = (props) => {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"1rem 0rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          borderTop: \"1px solid #e1e7ec\",\r\n          borderBottom: \"1px solid #e1e7ec\",\r\n          fontSize: \"16px\",\r\n          padding: \"0.75rem\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <i\r\n          className=\"icon-pokeball\"\r\n          style={{ paddingLeft: \"1rem\", fontSize: \"20px\", color: \"#dd2020\" }}\r\n        />\r\n        <span style={{ paddingLeft: \"1rem\", fontWeight: \"bold\" }}>{title}</span>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Section from \"./Section\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDescription = styled.p`\r\n  margin: 1rem 4rem;\r\n  color: #5f6b7a;\r\n`;\r\n\r\ninterface IProps {\r\n  description: string;\r\n}\r\n\r\nconst DescriptionSection: FunctionComponent<IProps> = ({ description }) => {\r\n  return (\r\n    <Section title=\"Description\">\r\n      <StyledDescription>{description}</StyledDescription>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default DescriptionSection;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AbilityNameLink = styled(Link)`\r\n  padding: 0.25rem 0;\r\n  margin: 1rem 1rem 0.5rem 1rem;\r\n  background-color: #e1e7ec;\r\n  color: #8895a7;\r\n  border-radius: 20px;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: #8895a7;\r\n  }\r\n`;\r\n\r\nconst AbilityEffectDiv = styled.div`\r\n  color: #5f6b7a;\r\n  text-align: left;\r\n  margin: 0.5rem 1rem;\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n  name: string;\r\n  effect: string;\r\n}\r\n\r\nconst AbilityInfo: FunctionComponent<IProps> = ({ name, effect, id }) => {\r\n  return (\r\n    <div className=\"col-lg-4 text-center\" key={name}>\r\n      <AbilityNameLink to={`/abilities/${id}`}>\r\n        <span>{name}</span>\r\n      </AbilityNameLink>\r\n      <AbilityEffectDiv>{effect}</AbilityEffectDiv>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AbilityInfo;\r\n","import React, { FunctionComponent, useCallback } from \"react\";\r\nimport Section from \"./Section\";\r\nimport AbilityInfo from \"./AbilityInfo\";\r\nimport styled from \"styled-components\";\r\nimport { PokemonAbility } from \"types\";\r\n\r\nconst AbilitiesContainer = styled.div`\r\n  margin: 0 3rem;\r\n`;\r\n\r\ninterface IProps {\r\n  abilities: PokemonAbility[];\r\n}\r\n\r\nconst AbilitySection: FunctionComponent<IProps> = ({ abilities }) => {\r\n  const getAbilityName = useCallback((ability) => {\r\n    const name = ability.name.replace(/-/g, \" \");\r\n    return ability.is_hidden ? `${name} (HIDDEN)` : name;\r\n  }, []);\r\n\r\n  const mapAbilities = useCallback(\r\n    (abilities: PokemonAbility[]) => {\r\n      const elems = [];\r\n      for (let ability of abilities) {\r\n        let abilityInfo = (\r\n          <AbilityInfo\r\n            name={getAbilityName(ability)}\r\n            effect={ability.short_effect}\r\n            id={ability.id}\r\n            key={ability.name}\r\n          />\r\n        );\r\n        if (ability.is_hidden) {\r\n          elems.push(abilityInfo);\r\n        } else {\r\n          elems.unshift(abilityInfo);\r\n        }\r\n      }\r\n      return elems;\r\n    },\r\n    [getAbilityName]\r\n  );\r\n  return (\r\n    <Section title=\"Abilities\">\r\n      <AbilitiesContainer className=\"row no-gutters\">\r\n        {abilities && mapAbilities(abilities)}\r\n      </AbilitiesContainer>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default AbilitySection;\r\n","import { Stat, StatName, Stats } from \"types\";\r\n\r\ninterface StatVariables {\r\n  level: number;\r\n  iv: number;\r\n  ev: number;\r\n  natureMultiplier: number;\r\n}\r\n\r\nexport const calculateStat = (name: StatName, value: number, variables: StatVariables) => {\r\n  const { level, iv, ev, natureMultiplier } = variables;\r\n  if (name === \"hp\") {\r\n    return Math.floor((level / 100) * (value * 2 + iv + ev / 4) + level + 10);\r\n  } else {\r\n    return Math.floor(((level / 100) * (value * 2 + iv + ev / 4) + 5) * natureMultiplier);\r\n  }\r\n};\r\n\r\nexport const getMinStat = (name: StatName, value: number) => {\r\n  const variables: StatVariables = {\r\n    level: 100,\r\n    iv: 0,\r\n    ev: 0,\r\n    natureMultiplier: 0.9,\r\n  };\r\n  return calculateStat(name, value, variables);\r\n};\r\n\r\nexport const getMaxStat = (name: StatName, value: number) => {\r\n  const variables: StatVariables = {\r\n    level: 100,\r\n    iv: 31,\r\n    ev: 252,\r\n    natureMultiplier: 1.1,\r\n  };\r\n  return calculateStat(name, value, variables);\r\n};\r\n\r\nexport const toMinStats = (stats: Stats): Stats => {\r\n  const { hp, attack, defense, special_attack, special_defense, speed } = stats;\r\n  return {\r\n    hp: { ...hp, value: getMinStat(\"hp\", hp.value) },\r\n    attack: { ...hp, value: getMinStat(\"attack\", attack.value) },\r\n    defense: { ...hp, value: getMinStat(\"defense\", defense.value) },\r\n    special_attack: { ...hp, value: getMinStat(\"special_attack\", special_attack.value) },\r\n    special_defense: { ...hp, value: getMinStat(\"special_defense\", special_defense.value) },\r\n    speed: { ...hp, value: getMinStat(\"speed\", speed.value) },\r\n  };\r\n};\r\n\r\nexport const toMaxStats = (stats: Stats) => {\r\n  const { hp, attack, defense, special_attack, special_defense, speed } = stats;\r\n  return {\r\n    hp: { ...hp, value: getMaxStat(\"hp\", hp.value) },\r\n    attack: { ...hp, value: getMaxStat(\"attack\", attack.value) },\r\n    defense: { ...hp, value: getMaxStat(\"defense\", defense.value) },\r\n    special_attack: { ...hp, value: getMaxStat(\"special_attack\", special_attack.value) },\r\n    special_defense: { ...hp, value: getMaxStat(\"special_defense\", special_defense.value) },\r\n    speed: { ...hp, value: getMaxStat(\"speed\", speed.value) },\r\n  };\r\n};\r\n","import React, { useState, useEffect, FunctionComponent, useCallback } from \"react\";\r\nimport maxBy from \"lodash-es/maxBy\";\r\nimport { toMinStats, toMaxStats } from \"utils/statCalculator\";\r\nimport { Stat, Stats } from \"types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Table = styled.table`\r\n  table-layout: fixed;\r\n\r\n  th,\r\n  td {\r\n    padding: 4px 10px;\r\n    font-size: 0.875rem;\r\n    font-weight: normal;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Row = styled.tr<{ index: number }>`\r\n  height: 33px;\r\n  box-sizing: border-box;\r\n  border-width: 1px 0;\r\n  border-style: solid;\r\n  border-color: #f0f0f0;\r\n  ${(props) => props.index === 0 && \"border: none;\"}\r\n`;\r\n\r\nconst StatName = styled.th`\r\n  color: #737373;\r\n`;\r\n\r\nconst StatValue = styled.td`\r\n  color: black;\r\n  min-width: 50px;\r\n`;\r\n\r\nconst StatBarContainer = styled.td`\r\n  width: 100%;\r\n  height: 0.75rem;\r\n`;\r\n\r\nconst StatBar = styled.div<{ ratio: number }>`\r\n  height: 0.8rem;\r\n  width: 100%;\r\n  background-color: #ddedff;\r\n  border-radius: 10px;\r\n\r\n  div {\r\n    width: ${(props) => `${props.ratio}%`};\r\n    background-color: #0999fe;\r\n    height: 0.8rem;\r\n    border-radius: 10px;\r\n    transition: 300ms ease-in-out;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  stats: Stats;\r\n  type: string;\r\n}\r\n\r\nconst StatsTable: FunctionComponent<IProps> = (props) => {\r\n  const { stats: baseStats, type } = props;\r\n  const [stats, setStats] = useState(baseStats);\r\n  const [maxValue, setMaxValue] = useState(\r\n    (maxBy(Object.values(stats), \"value\") ?? baseStats.hp).value\r\n  );\r\n\r\n  useEffect(() => {\r\n    setStats(baseStats);\r\n  }, [baseStats]);\r\n\r\n  useEffect(() => {\r\n    let newStats = baseStats;\r\n    if (type === \"base\") {\r\n      newStats = baseStats;\r\n    } else if (type === \"min\") {\r\n      newStats = toMinStats(baseStats);\r\n    } else if (type === \"max\") {\r\n      newStats = toMaxStats(baseStats);\r\n    }\r\n    setStats(newStats);\r\n    setMaxValue((maxBy(Object.values(newStats), \"value\") ?? newStats.hp).value);\r\n  }, [baseStats, type]);\r\n\r\n  const formatName = (name: string) => {\r\n    switch (name) {\r\n      default:\r\n        return;\r\n      case \"hp\":\r\n        return \"HP\";\r\n      case \"attack\":\r\n        return \"Attack\";\r\n      case \"defense\":\r\n        return \"Defense\";\r\n      case \"special_attack\":\r\n        return \"Sp. Atk\";\r\n      case \"special_defense\":\r\n        return \"Sp. Def\";\r\n      case \"speed\":\r\n        return \"Speed\";\r\n    }\r\n  };\r\n\r\n  const scaleLength = useCallback(\r\n    (value: number) => {\r\n      const length = (value / maxValue) * 100;\r\n      return length;\r\n    },\r\n    [maxValue]\r\n  );\r\n\r\n  return (\r\n    <Table>\r\n      <tbody>\r\n        {Object.entries(stats).map(([name, stat]: [string, Stat], index) => (\r\n          <Row key={name} index={index}>\r\n            <StatName>{formatName(name)}</StatName>\r\n            <StatValue>{stat.value}</StatValue>\r\n            <StatBarContainer>\r\n              <StatBar ratio={scaleLength(stat.value)}>\r\n                <div />\r\n              </StatBar>\r\n              {/* <div\r\n                  className={\"bar fill\"}\r\n                  style={{ width: `${scaleLength(stat.value)}%` }}\r\n                />\r\n                <div\r\n                  className=\"bar fill-bg\"\r\n                  style={{ width: `${100 - scaleLength(stat.value)}%` }}\r\n                /> */}\r\n            </StatBarContainer>\r\n          </Row>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StatsTable;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabNavDiv = styled.div`\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid rgb(225, 231, 236);\r\n  white-space: nowrap;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NavItem = styled.div<{ selected: boolean }>`\r\n  padding: 0 1.25rem;\r\n  color: ${(props) => (props.selected ? \"#dd2020\" : \"grey\")};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: 100ms ease-out;\r\n  font-weight: bold;\r\n`;\r\ninterface IProps {\r\n  current: string;\r\n  tabs: string[];\r\n  onTabChange: (newTab: string) => void;\r\n}\r\n\r\nconst TabNav: FunctionComponent<IProps> = ({ current, tabs, onTabChange }) => {\r\n  return (\r\n    <TabNavDiv>\r\n      {tabs.map((tab) => {\r\n        return (\r\n          <NavItem onClick={() => onTabChange(tab)} key={tab} selected={tab === current}>\r\n            {tab}\r\n          </NavItem>\r\n        );\r\n      })}\r\n    </TabNavDiv>\r\n  );\r\n};\r\n\r\nexport default TabNav;\r\n","import React, { useState, FunctionComponent, ReactNode } from \"react\";\r\nimport TabNav from \"./TabNav\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  tabs: string[];\r\n  children: (tab: string) => ReactNode;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TabView: FunctionComponent<IProps> = (props) => {\r\n  const { tabs, children } = props;\r\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\r\n\r\n  const handleTabChange = (newTab: string) => {\r\n    setCurrentTab(newTab);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TabNav current={currentTab} tabs={tabs} onTabChange={handleTabChange} />\r\n      {children(currentTab)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TabView;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Section from \"./Section\";\r\nimport StatsTable from \"./StatsTable\";\r\nimport TabView from \"./TabView\";\r\nimport styled from \"styled-components\";\r\nimport { Stats } from \"types\";\r\n\r\nconst StatsTableWrapper = styled.div`\r\n  margin: 0 1rem;\r\n`;\r\n\r\ninterface IProps {\r\n  stats: Stats;\r\n}\r\n\r\nconst StatsSection: FunctionComponent<IProps> = ({ stats }) => {\r\n  return (\r\n    <Section title=\"Stats\">\r\n      {stats && (\r\n        <TabView tabs={[\"base\", \"min\", \"max\"]}>\r\n          {(tab) => (\r\n            <StatsTableWrapper>\r\n              <StatsTable type={tab} stats={stats} />\r\n            </StatsTableWrapper>\r\n          )}\r\n        </TabView>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default StatsSection;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Description = styled.div`\r\n  margin: 0.5rem;\r\n  font-size: 14px;\r\n  min-width: 100px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 33.333%;\r\n  flex: 0 0 33.333%;\r\n\r\n  @media (max-width: 600px) {\r\n    max-width: 50%;\r\n    flex: 0 0 50%;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  label: string;\r\n  description: string;\r\n  iconName: string;\r\n}\r\n\r\nconst InfoItem: FunctionComponent<IProps> = (props) => {\r\n  const { label, description, iconName } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"row no-gutters flex-nowrap justify-content-center flex-grow-1\">\r\n        <div\r\n          className=\"d-flex justify-content-center align-items-center\"\r\n          style={{ padding: \"0.5rem\" }}\r\n        >\r\n          <i className={iconName} style={{ fontSize: \"24px\" }} />\r\n        </div>\r\n        <Description>\r\n          <div>{label}</div>\r\n          <div style={{ color: \"rgba(255,255,255,0.7)\" }}>{description}</div>\r\n        </Description>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InfoItem;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport InfoItem from \"./InfoItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInfoBox = styled.div`\r\n  background-color: #dd2020;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: white;\r\n  padding: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst InfoItemsWrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\ninterface IProps {\r\n  height: number;\r\n  weight: number;\r\n  growth: string;\r\n  gender: number;\r\n  category: string;\r\n  catchRate: number;\r\n}\r\n\r\nconst InfoBox: FunctionComponent<IProps> = ({\r\n  height,\r\n  weight,\r\n  growth,\r\n  gender,\r\n  category,\r\n  catchRate,\r\n}) => {\r\n  const formatCategory = (category: string) => {\r\n    return category.replace(\" Pokémon\", \"\");\r\n  };\r\n  return (\r\n    <StyledInfoBox>\r\n      <InfoItemsWrapper className=\"row no-gutters\">\r\n        <InfoItem label=\"Height\" iconName=\"icon-height\" description={`${height / 10} m`} />\r\n        <InfoItem label=\"Weight\" iconName=\"icon-weight\" description={`${weight / 10} kg`} />\r\n        <InfoItem label=\"Growth\" iconName=\"icon-weight\" description={`Medium Slow`} />\r\n        <InfoItem label=\"Gender\" iconName=\"icon-gender\" description={`50% M / 50% F`} />\r\n        <InfoItem\r\n          label=\"Category\"\r\n          iconName=\"icon-weight\"\r\n          description={`${formatCategory(category)}`}\r\n        />\r\n        <InfoItem label=\"Catch Rate\" iconName=\"icon-catch\" description={`50%`} />\r\n      </InfoItemsWrapper>\r\n    </StyledInfoBox>\r\n  );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport DescriptionSection from \"./DescriptionSection\";\r\nimport AbilitySection from \"./AbilitySection\";\r\nimport StatsSection from \"./StatsSection\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport { Pokemon, PokemonAbility } from \"types\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\r\n\r\ninterface IProps {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst InfoTab: FunctionComponent<IProps> = ({ pokemon }) => {\r\n  const { getAbilitiesByIds } = usePokemonApi();\r\n  const [abilities, setAbilities] = useState<PokemonAbility[]>([]);\r\n\r\n  useDeepCompareEffect(() => {\r\n    const abilityIds = pokemon.abilities.map((ability) => ability.id);\r\n    getAbilitiesByIds(abilityIds).then((res) => {\r\n      const pokemonAbilities: PokemonAbility[] = pokemon.abilities.map((ability) => {\r\n        const match = res.find((a) => a.id === ability.id) ?? {\r\n          ...ability,\r\n          description: \"\",\r\n          effect: \"\",\r\n          short_effect: \"\",\r\n        };\r\n        return { ...ability, ...match };\r\n      });\r\n      setAbilities(pokemonAbilities);\r\n    });\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <InfoBox\r\n        height={pokemon.height}\r\n        weight={pokemon.weight}\r\n        category={pokemon.category}\r\n        growth={\"fast\"}\r\n        gender={1}\r\n        catchRate={50}\r\n      />\r\n      <DescriptionSection description={pokemon.description} />\r\n      <AbilitySection abilities={abilities} />\r\n      <StatsSection stats={pokemon.stats} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoTab;\r\n","import { $enum } from \"ts-enum-util\";\r\nimport { LearnType } from \"enums\";\r\n\r\nexport function getAllLearnTypeNames(): string[] {\r\n  return $enum(LearnType).getValues().map(getLearnTypeName);\r\n}\r\n\r\nfunction getLearnTypeName(learnType: LearnType): string {\r\n  return $enum.mapValue(learnType).with({\r\n    [LearnType.EGG]: \"egg\",\r\n    [LearnType.LEVEL_UP]: \"level up\",\r\n    [LearnType.MACHINE]: \"machine\",\r\n    [LearnType.TUTOR]: \"tutor\",\r\n  });\r\n}\r\n\r\nconst learnTypeNameMap: Map<string, LearnType> = new Map<string, LearnType>();\r\n(function populateGenerationNameMap() {\r\n  $enum(LearnType).forEach((learnType) => {\r\n    const name = getLearnTypeName(learnType);\r\n    learnTypeNameMap.set(name, learnType);\r\n  });\r\n})();\r\n\r\nexport function getLearnTypeFromName(name: string): LearnType {\r\n  return learnTypeNameMap.get(name) ?? LearnType.LEVEL_UP;\r\n}\r\n","import React, { useEffect, useCallback, useState, FunctionComponent, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport orderBy from \"lodash-es/orderBy\";\r\nimport { ColumnModel, DataObject, SortModel } from \"types\";\r\nimport { SortDirection } from \"enums\";\r\n\r\nconst StyledHeaderCell = styled.th`\r\n  position: sticky;\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  thead tr:nth-child(1) th {\r\n    background: #fafafa;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  data: DataObject[];\r\n  columns: ColumnModel[];\r\n  sortModel?: SortModel;\r\n}\r\n\r\nconst Table: FunctionComponent<IProps> = (props) => {\r\n  const { data, columns, sortModel } = props;\r\n  const [sortedData, setSortedData] = useState<DataObject[]>(data);\r\n  const [sortCategory, setSortCategory] = useState<string>(\r\n    sortModel?.field ?? columns[0].fieldName\r\n  );\r\n  const [sortDirection, setSortDirection] = useState<SortDirection>(\r\n    sortModel?.sortDirection ?? SortDirection.ASC\r\n  );\r\n\r\n  useEffect(() => {\r\n    // we use switch block because we don't want to be strongly coupled with the field names of move.\r\n    let newSortedData = data;\r\n    const targetColumn = columns.find((c) => c.fieldName === sortCategory);\r\n\r\n    if (data.length > 0 && targetColumn) {\r\n      newSortedData = orderBy(\r\n        data,\r\n        [targetColumn.sortFunction ?? targetColumn.fieldName],\r\n        [sortDirection]\r\n      );\r\n    }\r\n\r\n    setSortedData(newSortedData);\r\n  }, [columns, data, sortCategory, sortDirection]);\r\n\r\n  const toggleSort = useCallback(\r\n    (newSortCategory) => {\r\n      let newSortDirection = SortDirection.ASC;\r\n      if (newSortCategory === sortCategory) {\r\n        newSortDirection =\r\n          sortDirection === SortDirection.ASC ? SortDirection.DESC : SortDirection.ASC;\r\n      }\r\n      setSortCategory(newSortCategory);\r\n      setSortDirection(newSortDirection);\r\n    },\r\n    [sortCategory, sortDirection, setSortCategory, setSortDirection]\r\n  );\r\n\r\n  const Header = useMemo(() => {\r\n    return columns.map((column) => (\r\n      <StyledHeaderCell\r\n        key={column.name}\r\n        onClick={column.sortable ? () => toggleSort(column.fieldName) : undefined}\r\n      >\r\n        {column.name}\r\n      </StyledHeaderCell>\r\n    ));\r\n  }, [columns, toggleSort]);\r\n\r\n  const Row = useMemo(() => {}, []);\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>{Header}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {sortedData.length > 0 &&\r\n          sortedData.map((datum, index) => (\r\n            <tr key={datum.toString() + index}>\r\n              {columns.map((column) => {\r\n                return <td key={column.fieldName}>{datum[column.fieldName]}</td>;\r\n              })}\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { ColumnModel, Move } from \"types\";\r\nimport Table from \"./Table\";\r\n\r\ninterface IProps {\r\n  moves: Move[];\r\n}\r\n\r\nexport const baseMoveColumns: ColumnModel[] = [\r\n  {\r\n    name: \"Move\",\r\n    fieldName: \"name\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Power\",\r\n    fieldName: \"power\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Acc.\",\r\n    fieldName: \"accuracy\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"PP\",\r\n    fieldName: \"pp\",\r\n    sortable: true,\r\n  },\r\n];\r\n\r\nconst MoveTable: FunctionComponent<IProps> = ({ moves }) => {\r\n  return <Table data={moves} columns={baseMoveColumns} />;\r\n};\r\n\r\nexport default MoveTable;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { ColumnModel, LevelUpMove } from \"types\";\r\nimport Table from \"./Table\";\r\nimport { baseMoveColumns } from \"./MoveTable\";\r\n\r\ninterface IProps {\r\n  moves: LevelUpMove[];\r\n}\r\n\r\nconst columns: ColumnModel[] = [\r\n  {\r\n    name: \"Level\",\r\n    fieldName: \"level_learned_at\",\r\n    sortable: true,\r\n  },\r\n  ...baseMoveColumns,\r\n];\r\n\r\nconst LevelUpMoveTable: FunctionComponent<IProps> = ({ moves }) => {\r\n  return <Table data={moves} columns={columns} />;\r\n};\r\n\r\nexport default LevelUpMoveTable;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { ColumnModel, Move } from \"types\";\r\nimport Table from \"./Table\";\r\nimport { baseMoveColumns } from \"./MoveTable\";\r\n\r\ninterface IProps {\r\n  moves: Move[];\r\n}\r\n\r\nconst columns: ColumnModel[] = [\r\n  {\r\n    name: \"TM\",\r\n    fieldName: \"tm\",\r\n    sortable: true,\r\n  },\r\n  ...baseMoveColumns,\r\n];\r\n\r\nconst MachineMoveTable: FunctionComponent<IProps> = ({ moves }) => {\r\n  return <Table data={moves} columns={columns} />;\r\n};\r\n\r\nexport default MachineMoveTable;\r\n","import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport TabView from \"./TabView\";\r\nimport { getAllLearnTypeNames, getLearnTypeFromName } from \"utils/LearnTypeFilter\";\r\nimport { LearnType } from \"enums\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport { Moveset, PokemonMoveset } from \"types\";\r\nimport { $enum } from \"ts-enum-util\";\r\nimport LevelUpMoveTable from \"./LevelUpMoveTable\";\r\nimport MachineMoveTable from \"./MachineMoveTable\";\r\nimport MoveTable from \"./MoveTable\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  movesetId: number;\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding: 15px;\r\n`;\r\n\r\nconst TableScroll = styled.div`\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst MoveTab: FunctionComponent<IProps> = ({ movesetId }) => {\r\n  const { getMovesetById, getMovesByIds } = usePokemonApi();\r\n  const [moveset, setMoveset] = useState<PokemonMoveset>({\r\n    egg: [],\r\n    level_up: [],\r\n    machine: [],\r\n    tutor: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getMovesetById(movesetId).then(async (moveset: Moveset) => {\r\n      const eggMoves = await getMovesByIds(moveset.egg.map((move) => move.id));\r\n      const levelUpMoves = await getMovesByIds(moveset[\"level_up\"].map((move) => move.id));\r\n      const machineMoves = await getMovesByIds(moveset.machine.map((move) => move.id));\r\n      const tutorMoves = await getMovesByIds(moveset.tutor.map((move) => move.id));\r\n\r\n      setMoveset({\r\n        egg: eggMoves,\r\n        level_up: levelUpMoves.map((move, index) => ({ ...moveset[\"level_up\"][index], ...move })),\r\n        machine: machineMoves,\r\n        tutor: tutorMoves,\r\n      });\r\n    });\r\n  }, [getMovesByIds, getMovesetById, movesetId]);\r\n\r\n  const getTable = useCallback(\r\n    (tab: string) => {\r\n      const learnType = getLearnTypeFromName(tab);\r\n      const table = $enum.mapValue(learnType).with({\r\n        [LearnType.LEVEL_UP]: <LevelUpMoveTable moves={moveset[LearnType.LEVEL_UP]} />,\r\n        [LearnType.EGG]: <MoveTable moves={moveset[LearnType.EGG]} />,\r\n        [LearnType.MACHINE]: <MachineMoveTable moves={moveset[LearnType.MACHINE]} />,\r\n        [LearnType.TUTOR]: <MoveTable moves={moveset[LearnType.TUTOR]} />,\r\n      });\r\n      return (\r\n        <TableContainer className=\"container\">\r\n          <TableScroll>{table}</TableScroll>\r\n        </TableContainer>\r\n      );\r\n    },\r\n    [moveset]\r\n  );\r\n\r\n  return <TabView tabs={getAllLearnTypeNames()}>{(tab) => getTable(tab)}</TabView>;\r\n};\r\n\r\nexport default MoveTab;\r\n","import { Type } from \"enums\";\r\nimport React, { FunctionComponent, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getTypePillColor } from \"utils/TypeFilter\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Pill = styled.div<{ type: Type }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex: 1;\r\n  background: ${(props) => getTypePillColor(props.type)};\r\n  min-width: calc(100% / 3 - 16px);\r\n  margin: 0 8px;\r\n  margin-top: 1rem;\r\n  height: 32px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Nunito Sans\";\r\n  color: white;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst TypeName = styled.div`\r\n  display: flex;\r\n  text-transform: uppercase;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Multiplier = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 32px;\r\n  width: 40px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 0 5px 5px 0;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\ninterface IProps {\r\n  type: Type;\r\n  multiplier: number;\r\n}\r\n\r\nconst TypeMultiplierPill: FunctionComponent<IProps> = ({ type, multiplier }) => {\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 659px)\" });\r\n  const typeName = isSmallScreen ? type.substring(0, 3) : type;\r\n  const fractionMultiplier = useMemo(() => {\r\n    if (multiplier === 0 || multiplier >= 1) {\r\n      return multiplier.toString();\r\n    } else {\r\n      const denominator = 1 / multiplier;\r\n      return `1/${denominator}`;\r\n    }\r\n  }, [multiplier]);\r\n\r\n  return (\r\n    <Pill type={type}>\r\n      <TypeName>{typeName}</TypeName>\r\n      <Multiplier>x{fractionMultiplier}</Multiplier>\r\n    </Pill>\r\n  );\r\n};\r\n\r\nexport default TypeMultiplierPill;\r\n","import { PokemonType } from \"types\";\r\nimport React, { FunctionComponent, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"./Section\";\r\nimport { Type } from \"enums\";\r\nimport { $enum } from \"ts-enum-util\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport TypeMultiplierPill from \"./TypeMultiplierPill\";\r\n\r\ninterface IProps {\r\n  types: PokemonType[];\r\n}\r\n\r\nconst Card = styled.div`\r\n  padding: 16px;\r\n  /* box-shadow: 0px 0px 10px #e1e7ec; */\r\n  border-radius: 5px;\r\n  border: 1px solid #e1e7ec;\r\n  background: white;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  font-size: 16px;\r\n  font-family: \"Nunito Sans\";\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nconst TypePillContainers = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst MatchupTab: FunctionComponent<IProps> = ({ types }) => {\r\n  const { getTypesByIds } = usePokemonApi();\r\n  const mapRef = useRef<Map<Type, number>>(new Map());\r\n  const weakAgainst = useRef<Type[]>([]);\r\n  const resistAgainst = useRef<Type[]>([]);\r\n  const normal = useRef<Type[]>([]);\r\n\r\n  useEffect(() => {\r\n    mapRef.current = new Map();\r\n    weakAgainst.current = [];\r\n    resistAgainst.current = [];\r\n    normal.current = [];\r\n    getTypesByIds(types.map((t) => t.id)).then((typeData) => {\r\n      const map = mapRef.current;\r\n      $enum(Type)\r\n        .getValues()\r\n        .forEach((type) => {\r\n          typeData.forEach((data) => {\r\n            let multiplier = map.get(type);\r\n            if (multiplier === undefined || multiplier === null) {\r\n              multiplier = 1;\r\n            }\r\n            const { half_damage_from, double_damage_from, no_damage_from } = data.damage_relations;\r\n            if (half_damage_from.includes(type)) {\r\n              multiplier /= 2;\r\n            } else if (double_damage_from.includes(type)) {\r\n              multiplier *= 2;\r\n            } else if (no_damage_from.includes(type)) {\r\n              multiplier = 0;\r\n            }\r\n            map.set(type, multiplier);\r\n          });\r\n          let multiplier = map.get(type);\r\n          if (multiplier === undefined || multiplier === null) {\r\n            multiplier = 1;\r\n          }\r\n          if (multiplier > 1) {\r\n            weakAgainst.current.push(type);\r\n          } else if (multiplier < 1) {\r\n            resistAgainst.current.push(type);\r\n          } else {\r\n            normal.current.push(type);\r\n          }\r\n        });\r\n    });\r\n  }, [getTypesByIds, types]);\r\n  return (\r\n    <div className=\"container\">\r\n      <Section title={\"Weak Against\"}>\r\n        <TypePillContainers>\r\n          {weakAgainst.current.map((type) => (\r\n            <TypeMultiplierPill type={type} multiplier={mapRef.current.get(type) ?? 1} />\r\n          ))}\r\n        </TypePillContainers>\r\n      </Section>\r\n      <Section title={\"Resistant Against\"}>\r\n        <TypePillContainers>\r\n          {resistAgainst.current.map((type) => (\r\n            <TypeMultiplierPill type={type} multiplier={mapRef.current.get(type) ?? 1} />\r\n          ))}\r\n        </TypePillContainers>\r\n      </Section>\r\n      <Section title={\"Normal Damage From\"}>\r\n        <TypePillContainers>\r\n          {normal.current.map((type) => (\r\n            <TypeMultiplierPill type={type} multiplier={mapRef.current.get(type) ?? 1} />\r\n          ))}\r\n        </TypePillContainers>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchupTab;\r\n","import React, { useState, useCallback, useEffect, FunctionComponent } from \"react\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport styled from \"styled-components\";\r\nimport InfoTab from \"./InfoTab\";\r\nimport MoveTab from \"./MoveTab\";\r\nimport { Pokemon } from \"types\";\r\nimport usePokemonApi from \"hooks/PokemonApiHook\";\r\nimport MatchupTab from \"./MatchupTab\";\r\n\r\nconst PokemonDetailTabsContainer = styled.div`\r\n  background-color: transparent;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  box-shadow: none;\r\n  background-color: #fafafa;\r\n  border-bottom: 1px solid rgb(225, 231, 236);\r\n`;\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n  button {\r\n    color: grey;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .Mui-selected {\r\n    color: #dd2020;\r\n  }\r\n\r\n  .MuiTabs-indicator {\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: transparent;\r\n    & > div {\r\n      max-width: 100px;\r\n      width: 100%;\r\n      background-color: #dd2020;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabIcon = styled.i`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst StyledTabContent = styled.div`\r\n  padding: 0;\r\n  flex: 1;\r\n  overflow: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledSwipeableViews = styled(SwipeableViews)`\r\n  height: 100%;\r\n  overflow: hidden;\r\n\r\n  .react-swipeable-view-container {\r\n    height: 100%;\r\n    .container {\r\n      padding-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabContentContainer = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst tabs = [\r\n  {\r\n    name: \"Info\",\r\n    iconName: \"info\",\r\n    content: (pokemon: Pokemon) => <InfoTab pokemon={pokemon} />,\r\n  },\r\n  {\r\n    name: \"Moves\",\r\n    iconName: \"movedex\",\r\n    content: (pokemon: Pokemon) => <MoveTab movesetId={pokemon.moveset_id} />,\r\n  },\r\n  {\r\n    name: \"Matchups\",\r\n    iconName: \"matchups\",\r\n    content: (pokemon: Pokemon) => <MatchupTab types={pokemon.types} />,\r\n  },\r\n];\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst PokemonDetailTabs: FunctionComponent<IProps> = ({ id }) => {\r\n  const theme = useTheme();\r\n  const [currentTabIndex, setCurrentTabIndex] = useState<number>(0);\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n  const { getPokemonById } = usePokemonApi();\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    getPokemonById(id).then((pokemon) => {\r\n      isSubscribed && setPokemon(pokemon);\r\n    });\r\n\r\n    return () => {\r\n      isSubscribed = false;\r\n    };\r\n  }, [getPokemonById, id]);\r\n\r\n  useEffect(() => {\r\n    setCurrentTabIndex(0);\r\n  }, [id]);\r\n\r\n  const handleChange = useCallback((event, newIndex) => {\r\n    setCurrentTabIndex(newIndex);\r\n  }, []);\r\n\r\n  const handleChangeIndex = useCallback((index) => {\r\n    setCurrentTabIndex(index);\r\n  }, []);\r\n\r\n  return (\r\n    <PokemonDetailTabsContainer>\r\n      <StyledAppBar position=\"relative\" color=\"default\">\r\n        <div className=\"container\">\r\n          <StyledTabs\r\n            value={currentTabIndex}\r\n            onChange={handleChange}\r\n            variant=\"fullWidth\"\r\n            TabIndicatorProps={{ children: <div /> }}\r\n          >\r\n            {tabs.map((tab) => (\r\n              <Tab\r\n                icon={<TabIcon className={`icon-${tab.iconName}`} />}\r\n                disableRipple\r\n                key={tab.name}\r\n              />\r\n            ))}\r\n          </StyledTabs>\r\n        </div>\r\n      </StyledAppBar>\r\n\r\n      <StyledTabContent>\r\n        <StyledSwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={currentTabIndex}\r\n          onChangeIndex={handleChangeIndex}\r\n          enableMouseEvents\r\n        >\r\n          {tabs.map((tab) => (\r\n            <TabContentContainer key={`${tab.name}-content`}>\r\n              {pokemon ? tab.content(pokemon) : <div>Loading...</div>}\r\n            </TabContentContainer>\r\n          ))}\r\n        </StyledSwipeableViews>\r\n      </StyledTabContent>\r\n    </PokemonDetailTabsContainer>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailTabs;\r\n","import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProfileBanner from \"./components/ProfileBanner\";\r\nimport PokemonDetailTabs from \"./components/PokemonDetailTabs\";\r\n\r\nconst ViewContainer = styled.div`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst PokemonDetailView: FunctionComponent<IProps> = (props) => {\r\n  const [id, setId] = useState<number>(props.id);\r\n\r\n  const handleBackward = useCallback(() => {\r\n    const newId = id === 1 ? 807 : id - 1;\r\n    // history.push(`/pokemons/${newId}`);\r\n    setId(newId);\r\n  }, [id]);\r\n\r\n  const handleForward = useCallback(() => {\r\n    const newId = id === 807 ? 1 : id + 1;\r\n    // history.push(`/pokemons/${newId}`);\r\n    setId(newId);\r\n  }, [id]);\r\n\r\n  return (\r\n    <ViewContainer>\r\n      <ProfileBanner id={id} onBackwardClick={handleBackward} onForwardClick={handleForward} />\r\n      <PokemonDetailTabs id={id} />\r\n    </ViewContainer>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailView;\r\n"],"sourceRoot":""}